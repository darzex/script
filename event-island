--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v75=0;while true do if (0==v75) then v19=v0(v3(v30,1,1));return "";end end else local v76=0;local v77;while true do if (v76==0) then v77=v2(v0(v30,16));if v19 then local v95=v5(v77,v19);v19=nil;return v95;else return v77;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v78=(v31/((1904 -(1407 + 495))^(v32-(2 -1))))%((2 + 0)^(((v33-(1 + 0)) -(v32-(2 -1))) + (2 -1))) ;return v78-(v78%(1 + 0)) ;else local v79=(1401 -(788 + 613)) + 0 ;local v80;while true do if (v79==(1794 -(986 + 808))) then v80=((5117 -3738) -((551 -(61 + 335)) + 1222))^(v32-(1 -(0 -0))) ;return (((v31%(v80 + v80))>=v80) and (1 + 0)) or (450 -(108 + 342)) ;end end end end local function v21()local v34=0;local v35;while true do if ((0 -0)==v34) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1;end if (v34==(3 -2)) then return v35;end end end local function v22()local v36=1946 -(1021 + 925) ;local v37;local v38;while true do if (v36==(1917 -(1880 + 36))) then return (v38 * (787 -531)) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (1707 -(1439 + 266)) ;v36=1 + 0 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + 2 + 2 ;return (v42 * (14994489 + 1782727)) + (v41 * (66992 -(261 + 1195))) + (v40 * 256) + v39 ;end local function v24()local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1 -0 ,(14 -7) + 13 ) * (2^(6 + 26))) + v43 ;local v47=v20(v44,15 + 6 ,91 -60 );local v48=((v20(v44,74 -(1405 -(5 + 1358)) )==(1 + 0)) and  -(334 -(196 + 137))) or (1027 -(463 + 563)) ;if (v47==(0 + 0)) then if (v46==0) then return v48 * (1423 -(855 + 568)) ;else v47=(304 -(78 + 223)) -(5 -3) ;v45=0;end elseif (v47==(2687 -(613 + 27))) then return ((v46==(0 -0)) and (v48 * (((555 + 249) -((2539 -(141 + 1791)) + 196))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(3734 -2711) ) * (v45 + (v46/((5 -3)^(193 -141)))) ;end local function v25(v49)local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(4 -3) );v18=v18 + v49 ;local v51={};for v65=963 -(885 + 77) , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0 + 0 ;local v68;while true do if (v67==0) then v68=0;while true do if (v68==0) then local v96=0;while true do if (v96~=(0 -0)) then else if (v52==(956 -(709 + 245))) then local v104=668 -(426 + 242) ;local v105;while true do if (v104==(1664 -(894 + 770))) then v105=0;while true do if (v105==(0 + 0)) then for v118=1,v57 do local v119=0 -0 ;local v120;local v121;local v122;while true do if (v119==(0 -0)) then v120=0;v121=nil;v119=1 + 0 ;end if ((3 -2)~=v119) then else v122=nil;while true do if (v120~=(0 -0)) then else v121=v21();v122=nil;v120=1;end if (1==v120) then if (v121==(1376 -(1263 + 112))) then v122=v21()~=(1758 -(911 + 847)) ;elseif (v121==2) then v122=v24();elseif (v121==(1905 -(597 + 1305))) then v122=v25();end v58[v118]=v122;break;end end break;end end end v56[3]=v21();v105=1;end if (v105~=1) then else for v123=1 + 0 ,v23() do local v124=0 + 0 ;local v125;local v126;while true do if (v124~=(1 -0)) then else while true do if (v125==(147 -(42 + 105))) then v126=v21();if (v20(v126,173 -(28 + 144) ,1)==(0 -0)) then local v241=0 -0 ;local v242;local v243;local v244;local v245;while true do if (v241==(6 -4)) then while true do if (v242==1) then local v318=0;while true do if (v318==1) then v242=850 -(678 + 170) ;break;end if (v318==(0 -0)) then v245={v22(),v22(),nil,nil};if (v243==0) then local v345=0;local v346;local v347;local v348;while true do if (v345==(640 -(563 + 76))) then v348=nil;while true do if (0~=v346) then else local v363=379 -(32 + 347) ;while true do if (v363==(0 -0)) then v347=0 -0 ;v348=nil;v363=1;end if (v363==(522 -(63 + 458))) then v346=1;break;end end end if (v346~=(1 + 0)) then else while true do if (v347~=(1968 -(907 + 1061))) then else v348=1552 -(159 + 1393) ;while true do if (v348~=(0 -0)) then else v245[2 + 1 ]=v22();v245[3 + 1 ]=v22();break;end end break;end end break;end end break;end if (v345==(1639 -(33 + 1606))) then v346=272 -(136 + 136) ;v347=nil;v345=1;end end elseif (v243==(379 -(128 + 250))) then v245[3]=v23();elseif (v243==2) then v245[6 -3 ]=v23() -((406 -(213 + 191))^16) ;elseif (v243==(639 -(326 + 310))) then local v364=0 + 0 ;local v365;while true do if (v364~=(0 -0)) then else v365=0;while true do if (v365==0) then v245[693 -(42 + 648) ]=v23() -((1 + 1)^(49 -33)) ;v245[4 + 0 ]=v22();break;end end break;end end end v318=1 + 0 ;end end end if (v242~=2) then else local v319=1490 -(435 + 1055) ;local v320;while true do if (v319==(1598 -(380 + 1218))) then v320=0 + 0 ;while true do if (1==v320) then v242=8 -5 ;break;end if (0~=v320) then else if (v20(v244,1,584 -(106 + 477) )==1) then v245[2]=v58[v245[2]];end if (v20(v244,2,3 -1 )~=1) then else v245[3 + 0 ]=v58[v245[147 -(128 + 16) ]];end v320=1;end end break;end end end if (v242~=(0 -0)) then else local v321=0;while true do if (v321==(4 -3)) then v242=2 -1 ;break;end if (v321==0) then v243=v20(v126,2,2 + 1 );v244=v20(v126,4,1288 -(67 + 1215) );v321=1;end end end if (v242==(1618 -(1070 + 545))) then if (v20(v244,7 -4 ,3)==(2 -1)) then v245[4]=v58[v245[15 -11 ]];end v53[v123]=v245;break;end end break;end if (v241==0) then v242=0 -0 ;v243=nil;v241=1;end if (v241~=1) then else v244=nil;v245=nil;v241=2 + 0 ;end end end break;end end break;end if (v124==0) then local v127=449 -(277 + 172) ;while true do if (v127==0) then v125=1300 -(155 + 1145) ;v126=nil;v127=1 -0 ;end if (v127~=1) then else v124=1 + 0 ;break;end end end end end v52=3;break;end end break;end end end if (v52==0) then local v106=0;while true do if (v106==(392 -(264 + 128))) then local v112=0;while true do if (v112==1) then v106=2 -1 ;break;end if (v112==0) then v53={};v54={};v112=1;end end end if (1==v106) then v55={};v52=1;break;end end end v96=1;end if (v96==(648 -(557 + 90))) then v68=1;break;end end end if (v68~=(4 -3)) then else if (v52==3) then local v101=0 -0 ;while true do if (v101==(0 + 0)) then for v108=1 + 0 ,v23() do v54[v108-(1052 -(892 + 159)) ]=v28();end for v110=1,v23() do v55[v110]=v23();end v101=1;end if ((2 -1)==v101) then return v56;end end end if (v52==(1 + 0)) then local v102=0 + 0 ;local v103;while true do if (v102~=(0 + 0)) then else v103=1744 -(549 + 1195) ;while true do if (v103==(1 -0)) then v58={};v52=2;break;end if (0~=v103) then else local v113=0 + 0 ;while true do if (v113==0) then v56={v53,v54,nil,v55};v57=v23();v113=1;end if (v113==1) then v103=1;break;end end end end break;end end end break;end end break;end end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==3) then A,B=v27(v11(v74));if  not A[1] then local v91=v59[4][v70] or "?" ;error("Script error at ["   .. v91   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v69==2) then v74=nil;function v74()local v81=v62;local v82=v63;local v83=v64;local v84=v27;local v85={};local v86={};local v87={};for v92=426 -(414 + 12) ,v73 do if ((v92>=v83) or ((5103 -(794 + 924))<=947)) then v85[v92-v83 ]=v72[v92 + (463 -(202 + 260)) ];else v87[v92]=v72[v92 + (337 -(136 + 200)) ];end end local v88=(v73-v83) + 1 + 0 ;local v89;local v90;while true do local v93=0;local v94;while true do if (((4650 -(904 + 913))>=(283 + 31)) and (0==v93)) then v94=0;while true do if (((2724 -1802)<=(3756 + 755)) and ((0 + 0)==v94)) then local v107=0 -(212 -(87 + 125)) ;while true do if ((0==v107) or (4576<=(1934 + 1851))) then local v114=(0 -0) + 0 ;while true do if (((1936 -(868 + 1067))==v114) or ((4405 -(168 + 1817))<806)) then v107=(4415 -3395) -(637 + 382) ;break;end if (((4827 -(1142 + 588))>=(4914 -3183)) and ((0 -0)==v114)) then v89=v81[v70];v90=v89[1830 -(1247 + 582) ];v114=1 -0 ;end end end if ((v107==(1 -(0 + 0))) or ((432 + 2957)<=(4793 -1627))) then v94=1;break;end end end if (((2346 + 2040)>=(662 -(93 + 261))) and (v94==1)) then if ((v90<=(692 -(64 + 607))) or ((4374 -2551)>=(6155 -((2102 -(627 + 684)) + 718)))) then if ((v90<=(1659 -(226 + 1423))) or ((5255 -(27 + 196 + 1235))>4273)) then if ((((5848 -3553) + 1448)>(1587 -961)) and (v90<=(1959 -(1651 + 304)))) then if ((v90<=(1942 -(299 + 1374 + 268))) or ((657 + 246)>=4673)) then if ((v90==(764 -(664 + 100))) or ((5552 -(467 + 424))==(2209 -(193 + 209 + 86)))) then if ((v87[v89[8 -6 ]]<v87[v89[908 -(10 + 894) ]]) or (2116<936)) then v70=v70 + 1 ;else v70=v89[6 -3 ];end else v87[v89[2]]=v87[v89[1089 -(56 + 1030) ]] + v87[v89[400 -(263 + 133) ]] ;end elseif ((v90<=(5 -(1266 -(608 + 655)))) or (4335==1258)) then v70=v89[1313 -(878 + 432) ];elseif ((((8678 -(224 + 1447)) -(3193 -(87 + 1026)))>=(4759 -3033)) and (v90==3)) then if ((v89[3 -1 ]<=v87[v89[11 -7 ]]) or (2600==(639 -373))) then v70=v70 + 1 ;else v70=v89[(3 + 11) -11 ];end else local v162=0;local v163;local v164;while true do if ((v162==0) or ((554 + 3622)<=(7356 -4351))) then local v246=0 -0 ;while true do if (((5800 -1682)>=1421) and (v246==0)) then v163=v89[1568 -(273 + 1293) ];v164=v87[v163];v246=1;end if (((1622 + 2393)>(554 + 37)) and (v246==(2 -1))) then v162=1 -0 ;break;end end end if ((v162==1) or (1590<=(81 + 196 + 21))) then for v259=v163 + ((3598 -2172) -(678 + 747)) ,v89[3] do v7(v164,v87[v259]);end break;end end end elseif ((v90<=(6 + 1)) or (((3505 -1519) -((886 -268) + 1211))>1213)) then if ((v90<=5) or ((5435 -(1548 + 14))<=508)) then do return;end elseif ((v90>(4 + 2)) or ((635 + 3275)>(52 + 4391))) then local v165=0;local v166;local v167;while true do if (((4152 -2169)==(221 + 1762)) and (v165==((3 -2) + 0))) then for v260=v166 + 1 ,v89[1637 -(1327 + 306) ] do v167=v167   .. v87[v260] ;end v87[v89[2 + 0 ]]=v167;break;end if ((v165==0) or (((1199 -859) -(86 + 15))>(4756 -((1629 -793) + 992)))) then local v248=1116 -(902 + 214) ;while true do if ((v248==(1 -(0 + 0))) or (((9859 -4933) -((2039 -(1885 + 6)) + 1012 + 394))>=(16890 -12650))) then v165=1 -0 ;break;end if ((v248==(1247 -(451 + (1317 -(394 + 127))))) or ((6965 -2678)==((2964 -1963) -(5 + 256)))) then v166=v89[5 -2 ];v167=v87[v166];v248=1 -0 ;end end end end else local v168=0 + 0 ;local v169;while true do if (((2729 + 45)<(120 + (13208 -8805))) and (v168==0)) then v169=v89[2];v87[v169]=v87[v169](v87[v169 + (454 -(6 + (1041 -594))) ]);break;end end end elseif (((4588 -(1371 + (1577 -(996 + 340))))>=2958) and (v90<=(1010 -(572 + 430)))) then v87[v89[889 -(535 + 352) ]]=v87[v89[3]];elseif ((v90==9) or ((4912 -(374 + 721))<=(160 + 139))) then v87[v89[2]][v89[7 -4 ]]=v89[11 -7 ];elseif (((8747 -(2468 + 1853))>=(1565 -605)) and (v87[v89[2]]==v89[11 -7 ])) then v70=v70 + (1357 -(421 + 935)) ;else v70=v89[224 -(94 + 127) ];end elseif (((4429 -(263 + 558))>=(1160 -(26 + 14))) and (v90<=15)) then if ((v90<=(1808 -(860 + 936))) or ((433 + 3508)==(1729 + (606 -305)))) then if ((v90==(3 + 8)) or ((3110 -(418 + 258))>(4433 -(852 + 578)))) then v87[v89[504 -((749 -546) + 299) ]]=v87[v89[1 + 2 ]] -v87[v89[2 + 2 ]] ;else v61[v89[3]]=v87[v89[5 -3 ]];end elseif ((3796>=(1204 -298)) and (v90<=(1912 -(1812 + 87)))) then local v135=1421 -(1027 + (785 -391)) ;local v136;local v137;local v138;while true do if ((v135==1) or (3216<(1247 -(434 + 194)))) then v138=nil;while true do if ((v136==(1 + 0 + 0)) or (((12123 -9003) -2249)>=(4845 -3220))) then while true do if (((5217 -(327 + 433))==4457) and (v137==(0 + 0))) then v138=v89[2];v87[v138](v87[v138 + 1 + 0 ]);break;end end break;end if (((1218 + 36)==(4766 -3512)) and (v136==0)) then local v261=670 -(494 + 176) ;while true do if (((946 -(425 + 339))>=(472 -325)) and (v261==(2 -1))) then v136=1 + 0 ;break;end if (((542 -165)<=(3908 -(614 + 1126))) and (v261==(1750 -(697 + 1053)))) then v137=0 + 0 ;v138=nil;v261=1 -0 ;end end end end break;end if ((v135==(0 -0)) or ((7041 -4043)<=(1063 + 654))) then v136=0;v137=nil;v135=945 -(246 + 698) ;end end elseif ((v90>14) or ((15728 -12113)==(2674 -1883))) then v87[v89[2 + 0 ]]=v87[v89[1 + 2 ]] + v89[11 -7 ] ;else local v173=0 -(682 -(650 + 32)) ;local v174;while true do if (((0 -0)==v173) or ((1644 -(1100 + 379))==(1148 + 1096))) then v174=v89[(2520 -(299 + 1047)) -(582 + 590) ];v87[v174](v13(v87,v174 + (748 -(28 + 719)) ,v89[3]));break;end end end elseif (((3338 -(70 + 143))==(15201 -12076)) and (v90<=(18 + 0))) then if ((v90<=(27 -(4 + 7))) or ((2120 + 759)<(1842 + (3548 -2763)))) then if ((v89[6 -4 ]<v87[v89[1063 -(978 + 81) ]]) or ((2408 -1683)>(6366 -((2303 -1219) + (752 -427))))) then v70=v70 + 1 ;else v70=v89[1 + 2 ];end elseif ((v90>(61 -(173 -129))) or ((9565 -5154)<=((7513 -(748 + 1005)) -(1355 + 328)))) then v87[v89[3 -1 ]][v89[8 -5 ]]=v87[v89[4]];else local v178=0 -0 ;local v179;local v180;local v181;while true do if ((v178==(814 -(551 + (1767 -(1011 + 494))))) or ((111 + 1265)>=(3586 -(12 + 27)))) then v181={};v180=v10({},{__index=function(v262,v263)local v264=1724 -(94 + 1630) ;local v265;local v266;while true do if (((1739 -889)<=1400) and ((1046 -((474 -(55 + 44)) + 670))==v264)) then while true do if (((2086 + 1823)==(16679 -12770)) and (0==v265)) then local v326=0;while true do if (((1547 -(253 + 272))<=(3185 -1788)) and (v326==0)) then v266=v181[v263];return v266[1 + 0 ][v266[1413 -((1627 -(736 + 362)) + 882) ]];end end end end break;end if ((0==v264) or ((5548 -4173)>=(181 + 1248))) then v265=0 + 0 ;v266=nil;v264=1461 -(52 + 1408) ;end end end,__newindex=function(v267,v268,v269)local v270=0 + 0 ;local v271;local v272;while true do if ((4612==4612) and (v270==(496 -(334 + 162)))) then v271=(598 + 132) -(9 + 721) ;v272=nil;v270=1;end if ((v270==(3 -2)) or ((501 + 4217)==(3078 -2231))) then while true do if ((v271==(1139 -(60 + 1079))) or ((2009 -414)>=(1865 + 423))) then v272=v181[v268];v272[1576 -(1275 + 300) ][v272[447 -(251 + 12 + 182) ]]=v269;break;end end break;end end end});v178=2 + (572 -(142 + 430)) ;end if (((14850 -10689)>(7543 -4742)) and (v178==0)) then v179=v82[v89[224 -(114 + 107) ]];v180=nil;v178=1944 -(551 + 1392) ;end if ((v178==(2 + 0)) or ((1892 -(314 + 110))>1560)) then for v273=1 + 0 ,v89[(2728 -1458) -(1256 + 10) ] do local v274=0 + 0 ;local v275;local v276;while true do if (((1490 + 2898)>=(2939 -(399 + 1135))) and (0==v274)) then v275=0;v276=nil;v274=1 + 0 + (0 -0) ;end if (((20774 -15789)==(723 + 4262)) and (v274==(1 -0))) then while true do if ((4373>1019) and (v275==(1 -(0 -0)))) then if ((v276[1 + 0 ]==(3 + 5)) or (1781>=3824)) then v181[v273-1 ]={v87,v276[(501 + 558) -(101 + 955) ]};else v181[v273-(1 -0) ]={v60,v276[3]};end v86[ #v86 + 1 ]=v181;break;end if (((332 + (5505 -3582))<(853 + 4076)) and (v275==(0 -0))) then local v330=0 -0 ;while true do if ((1589>=(1784 -(434 + 526))) and (v330==(0 + (80 -(34 + 46))))) then v70=v70 + (2 -1) ;v276=v81[v70];v330=500 -(108 + 391) ;end if ((v330==(1 -0)) or ((2837 -(1475 + 368))>=3879)) then v275=1 + 0 ;break;end end end end break;end end end v87[v89[2]]=v29(v179,v180,v61);break;end end end elseif ((1487<=(3479 -(1080 + 864))) and (v90<=(56 -37))) then if (v87[v89[3 -1 ]] or (((13591 -7915) -2851)==(3398 -2016))) then v70=v70 + 1 ;else v70=v89[(2205 -(381 + 368)) -(127 + 1326) ];end elseif (((2453 -1404)>(122 + 693)) and (v90>20)) then local v183=0 -0 ;local v184;local v185;local v186;local v187;while true do if (((5846 -3217)<=(3474 -(520 + 174))) and (v183==0)) then v184=0 + (1956 -(1925 + 31)) ;v185=nil;v183=1;end if (((17075 -(2095 + 10011))>=(3885 -(1039 + 776))) and (v183==(1 + 0))) then local v254=0 + 0 ;while true do if (((1118 + 3252)>=1034) and (v254==(676 -(253 + 423)))) then v186=nil;v187=nil;v254=1 + 0 ;end if (((1 + (1532 -(838 + 694)))==v254) or ((1813 -559)>(6460 -(1292 + 460)))) then v183=179 -(3 + 9 + 165) ;break;end end end if ((v183==2) or (((2991 -899) + 459 + 361)>=(8714 -5054))) then while true do if (((2581 -(918 + 16))<=2956) and (v184==1)) then v187=1276 -(580 + 696) ;for v298=v185,v89[1 + 3 ] do local v299=0 + 0 ;while true do if ((v299==(0 + 0)) or ((632 -(39 + 353))>4543)) then v187=v187 + (3 -2) ;v87[v298]=v186[v187];break;end end end break;end if ((2253<(3530 -((55 -21) + 41))) and (((1098 + 313) -(417 + 994))==v184)) then local v284=316 -(44 + 134 + 138) ;local v285;while true do if ((v284==0) or (((18 + 0) -10)>1676)) then v285=1389 -(488 + 901) ;while true do if (((2793 -(875 + 446))>=(558 -(186 + 119 + 112))) and (v285==(0 + 0))) then v185=v89[1864 -(293 + 1569) ];v186={v87[v185](v87[v185 + (2 -(1 + 0)) ])};v285=1;end if (((1 + 0 + 0)==v285) or (2361==(3606 -(3586 -(101 + 1706))))) then v184=1195 -(1034 + 160) ;break;end end break;end end end end break;end end else v87[v89[1701 -(776 + 923) ]]=v87[v89[1301 -(937 + 190 + 171) ]]/v89[9 -5 ] ;end elseif ((v90<=32) or ((594 -(46 + 332))>728)) then if ((v90<=(37 -11)) or ((3598 -1784)<(4158 -2388))) then if ((v90<=(5 + 18)) or (((22848 -18258) + 119)==(2919 -1837))) then if ((v90==(16 + 6)) or ((3226 -(157 + 217))==(428 + 4089))) then v87[v89[3 -1 ]]();else v87[v89[1 + 1 ]]=v89[757 -(164 + 590) ];end elseif (((6594 -(1597 + 141))>(1577 + 3141)) and (v90<=(24 + 0))) then for v159=v89[369 -(226 + 141) ],v89[4 -1 ] do v87[v159]=nil;end elseif (((539 + 1232)==(4184 -2413)) and (v90==(8 + 17))) then if ((v89[1990 -(1709 + 279) ]==v87[v89[(2736 -(1433 + 36)) -((1957 -(307 + 909)) + 522) ]]) or (4684>=(5556 -(194 + 416)))) then v70=v70 + 1 ;else v70=v89[1191 -(384 + 804) ];end else local v189=(0 + 0) -0 ;local v190;local v191;while true do if (((16223 -11645)>(557 -402)) and (v189==(0 + 0))) then local v255=0 -0 ;while true do if (((4941 -2357)<=((29578 -18981) -6069)) and (v255==(1 + 0))) then v189=1328 -(246 + 1081) ;break;end if ((v255==(0 -0)) or ((3655 -(182 + (501 -(287 + 173))))<=(386 + 357))) then v190=v89[1864 -(1538 + 324) ];v191=v87[v89[535 -(16 + 516) ]];v255=1 -0 ;end end end if ((v189==(4 -3)) or (((16677 -(1182 + 137)) -11199)<2070)) then v87[v190 + (1 -0) ]=v191;v87[v190]=v191[v89[4]];break;end end end elseif ((((2814 -(1195 + 755)) + 446)<(6034 -3330)) and (v90<=(1959 -(730 + 1200)))) then if (((1156 -(4 + 292))<=(2841 + 938)) and (v90<=(631 -(522 + 82)))) then local v141=0 + 0 ;local v142;local v143;while true do if ((4567>(2509 -(92 + 261))) and (v141==((654 -404) -(103 + 147)))) then v142=330 -(42 + 288) ;v143=nil;v141=1 + 0 ;end if (((2229 -(995 + 365))==(424 + 445)) and (v141==(1 + 0))) then while true do if ((v142==(1388 -(782 + 606))) or ((3591 + 400)>(15180 -10795))) then v143=v89[5 -3 ];v87[v143]=v87[v143](v13(v87,v143 + 1 ,v89[1317 -(475 + 839) ]));break;end end break;end end elseif (((409 + (1265 -(1002 + 98)))<3674) and (v90>(8 + (49 -29)))) then if ((541<=(2149 -843)) and  not v87[v89[1 + 1 ]]) then v70=v70 + (317 -(75 + 241)) + (0 -0) ;else v70=v89[2 + 1 ];end else local v192=398 -(365 + 33) ;local v193;local v194;while true do if ((1==v192) or ((1967 -(168 + 89))>(3218 -(266 + 75)))) then while true do if (((2603 -(92 + 326 + 11))>(2629 -(850 + (1130 -(131 + 368))))) and (v193==(0 + 0))) then v194=v89[2];v87[v194]=v87[v194]();break;end end break;end if ((v192==((6796 -4875) -(1711 + 210))) or ((5095 -(1018 + (918 -(309 + 21))))<(371 -234))) then v193=0 + 0 ;v194=nil;v192=1 + 0 ;end end end elseif (((10830 -6568)<=(1696 + (3065 -(173 + 316)))) and (v90<=(778 -(96 + (1392 -740))))) then local v144=0 + 0 ;local v145;local v146;local v147;local v148;while true do if (((253 + 1132)>(1417 -(449 + 131))) and (v144==(1 -0))) then local v226=0 -0 ;while true do if ((1859<(790 + (4548 -(849 + 560)))) and (v226==(0 -0))) then v71=(v147 + v145) -(1269 -(893 + 375)) ;v148=1164 -(920 + 244) ;v226=1 -0 ;end if ((v226==(1 -0)) or ((255 + 872)<(527 + 276))) then v144=5 -3 ;break;end end end if (((1114 + 1090)==(3485 -1281)) and (v144==0)) then v145=v89[4 -2 ];v146,v147=v84(v87[v145](v13(v87,v145 + ((387 + 43) -(410 + 19)) ,v89[4 -1 ])));v144=1448 -(1259 + 188) ;end if ((v144==(6 -4)) or ((5698 -2121)<1895)) then for v235=v145,v71 do local v236=689 -(163 + 526) ;local v237;while true do if (((0 -0)==v236) or ((2481 -(1515 + 369))>=(4608 -(1130 + 448)))) then v237=0 + 0 ;while true do if ((v237==(0 -0)) or ((4590 -(63 + 1907))<=((117 -78) + 736))) then v148=v148 + 1 + 0 ;v87[v235]=v146[v148];break;end end break;end end end break;end end elseif (((3009 -1623)<=((9932 + 706) -5902)) and (v90==(26 + 5))) then if ((v87[v89[2]]==v87[v89[1371 -(46 + 1321) ]]) or ((1644 + 2103)<=((10880 -6844) -(298 + 179)))) then v70=v70 + 1 + 0 + (343 -(303 + 40)) ;else v70=v89[7 -(5 -1) ];end else v87[v89[3 -1 ]]=v87[v89[1310 -(1023 + 284) ]]/v87[v89[15 -11 ]] ;end elseif ((v90<=38) or ((1777 -(189 + 186))==(133 + 16))) then if ((v90<=(4 + 31)) or ((6656 -3692)==(990 + 390))) then if ((v90<=(162 -129)) or (3638==(11643 -6995))) then local v149=1462 -(1410 + 52) ;local v150;local v151;local v152;local v153;while true do if ((4548>=(2038 -575)) and (v149==(1 + 0))) then v152=nil;v153=nil;v149=2;end if (((3528 -(408 + 6))<=((27440 -17484) -5764)) and (v149==(3 -(92 -(20 + 71))))) then while true do if ((v150==(0 -0)) or (1723>=(11264 -8830))) then local v279=(32 + 586) -(90 + 528) ;while true do if ((v279==(3 -2)) or ((1451 + 2455)<=(966 + 1648))) then v150=1;break;end if (((1402 -976)<=(2851 + 813)) and (v279==(0 + 0))) then v151=(0 -0) -0 ;v152=nil;v279=1349 -(1105 + 243) ;end end end if ((343<=(1134 -(13 + 9))) and (v150==(1607 -(1285 + 202 + 119)))) then v153=nil;while true do if ((v151==(1637 -(1071 + (743 -177)))) or ((44 + 373)>(1306 -757))) then local v300=0 -0 ;while true do if (((3193 -(206 + 481))<=(3931 -(285 + 194))) and (v300==(1995 -(1661 + 333)))) then v151=3 -2 ;break;end if ((0==v300) or ((4294 -(6 + 91 + 1239))<(995 -528))) then v152=v89[1 + (1 -0) ];v153={};v300=1;end end end if ((((1680 + 866) -(32 + 158 + 120))==2236) and (v151==(1 -0))) then for v312=1294 -(21 + 1272) , #v86 do local v313=0 -0 ;local v314;local v315;while true do if (((4769 -(376 + 571))>2656) and (v313==(1005 -(387 + 617)))) then while true do if (((3966 -((933 -675) + 358))>=(2578 -(1794 + 1))) and (v314==0)) then v315=v86[v312];for v350=0 + 0 , #v315 do local v351=(229 + 443) -(306 + 366) ;local v352;local v353;local v354;while true do if (((5613 -2685)>(3177 -1559)) and (v351==(207 -(154 + 52)))) then v354=v352[1843 -(1367 + 474) ];if ((947>=(1326 -(75 + 745))) and (v353==v87) and (v354>=v152)) then local v366=0;local v367;local v368;while true do if ((876<=(4871 -3464)) and (v366==(0 + 0))) then v367=0 -0 ;v368=nil;v366=1 -0 ;end if ((v366==(1 -0)) or (1957>=(3006 -(134 + 31)))) then while true do if (((196 -65)<=(2564 -1176)) and (v367==(1774 -(1358 + 416)))) then v368=0 -0 ;while true do if (((5022 -(109 + 182))==(12303 -7572)) and ((611 -(95 + 516))==v368)) then v153[v354]=v353[v354];v352[1 -0 ]=v153;break;end end break;end end break;end end end break;end if (((0 + 0)==v351) or ((5269 -(87 + 131 + 79))<=(1095 + 253))) then local v362=(0 -0) + 0 ;while true do if ((((4678 + 6324) -7653)==(5292 -((1165 -318) + 1096))) and (v362==(0 + 0))) then v352=v315[v350];v353=v352[1 -0 ];v362=3 -2 ;end if ((v362==(869 -(463 + 405))) or ((2480 -(233 + (1764 -(1254 + 111))))<(2259 -(475 + 294 + 1094)))) then v351=(3267 -(1128 + 600)) -(637 + 901) ;break;end end end end end break;end end break;end if (((2956 -772)<(6896 -4378)) and (v313==0)) then v314=0;v315=nil;v313=(2 + 0) -1 ;end end end break;end end break;end end break;end if ((57==(118 -61)) and (v149==(0 -0))) then v150=(0 -0) -0 ;v151=nil;v149=1 -0 ;end end elseif (((17177 -12589)==(90 + 4498)) and (v90==(98 -64))) then local v196=0 -0 ;local v197;local v198;local v199;local v200;local v201;while true do if (((11 + 39)==(17 + 27 + 6)) and (v196==(937 -(890 + 45)))) then v201=nil;while true do if ((v197==(3 -2)) or ((1168 + 2204)>(1810 + 2069))) then local v290=0;while true do if (((1572 + 64)<((3966 -(527 + 729)) + 942)) and (v290==(1 -0))) then v197=7 -5 ;break;end if ((v290==((1725 -(457 + 1268)) -(0 + 0))) or ((3790 + 940)<(2432 -(60 + 299)))) then v71=(v200 + v198) -(1 + 0) ;v201=(755 + 1135) -(1393 + 497) ;v290=(2 -1) -0 ;end end end if (((3175 -2358)<(2821 -(831 + 31))) and (v197==(1453 -(1079 + 372)))) then for v301=v198,v71 do local v302=976 -(567 + 409) ;local v303;while true do if ((v302==(1405 -(323 + 1082))) or (((5955 -4196) + 1399)==217)) then v303=0 + 0 ;while true do if ((v303==(989 -(811 + 178))) or ((5036 -3106)>=((2066 -1427) + 1621))) then v201=v201 + 1 ;v87[v301]=v199[v201];break;end end break;end end end break;end if ((0==v197) or ((11359 -7004)<(10296 -7822))) then local v291=0 -0 ;while true do if (((784 + 725)<(3974 -(93 + 426))) and (0==v291)) then v198=v89[600 -(274 + 324) ];v199,v200=v84(v87[v198](v87[v198 + 1 + 0 ]));v291=1 + 0 ;end if ((v291==(1 + 0)) or (((5297 -3345) + 2052)<(5917 -3930))) then v197=4 -3 ;break;end end end end break;end if (((979 + (1264 -956))<=4133) and (v196==0)) then v197=1142 -(232 + 910) ;v198=nil;v196=3 -2 ;end if (((4 -3)==v196) or ((5713 -(662 + 260))<(3423 -2015))) then v199=nil;v200=nil;v196=2;end end else local v202=0;local v203;local v204;local v205;while true do if (((29 -(17 + 11))==v202) or ((977 + 2802)==(6127 -(5235 -(838 + 348))))) then v205=nil;while true do if ((v203==1) or (334==(4122 -(52 + 768)))) then while true do if (((37 + 262)<=((4881 -(168 + 618)) -(5 + 79))) and (v204==0)) then v205=v89[1 + 1 ];v87[v205](v13(v87,v205 + (3 -2) ,v71));break;end end break;end if (((434 + 247)<(10915 -7312)) and (v203==(0 + 0))) then local v292=1053 -(21 + 1032) ;while true do if ((v292==1) or (1522==(3479 -2543))) then v203=111 -(23 + 87) ;break;end if (((1534 -(211 + 97))<(2537 -(463 + 32 + 38))) and (v292==((341 -98) -(6 + 237)))) then v204=0;v205=nil;v292=1852 -(835 + 1016) ;end end end end break;end if ((v202==(1932 -(179 + 1753))) or ((5894 -3583)<(303 + (3607 -(611 + 1160))))) then v203=0;v204=nil;v202=97 -(67 + 29) ;end end end elseif ((v90<=(1443 -(586 + 821))) or (2593<=(2000 -458))) then v87[v89[1 + 1 ]]=v61[v89[3]];elseif ((((6356 -(418 + 903)) -(7 + 119 + 203 + 94))==4612) and (v90==((24 + 28) -15))) then v87[v89[2]]=v89[3]~=(0 + 0) ;else v87[v89[4 -2 ]]=v87[v89[3]][v89[2 + (3 -1) ]];end elseif ((v90<=(96 -55)) or ((4984 -(175 + 877))<=(7222 -3603))) then if ((v90<=(37 + 2)) or (1816<=(566 + 607))) then v87[v89[2]]=v60[v89[9 -6 ]];elseif (((2417 -(212 + 160))==(3021 -(952 + 24))) and (v90>40)) then v87[v89[2]]={};else local v210=v89[2];local v211=v89[14 -10 ];local v212=v210 + 1 + 1 ;local v213={v87[v210](v87[v210 + (2 -1) ],v87[v212])};for v228=1982 -(761 + 1220) ,v211 do v87[v212 + v228 ]=v213[v228];end local v214=v213[1 + 0 ];if (((2562 -826)<(3003 -(594 + 8))) and v214) then local v239=0;local v240;while true do if (((1160 + 2617)<4272) and (v239==(0 + 0))) then v240=0 -0 ;while true do if ((v240==(1667 -(103 + 861 + 703))) or ((3344 + 1254)<(1641 -(187 + 659)))) then v87[v212]=v214;v70=v89[1467 -(154 + 112 + 1198) ];break;end end break;end end else v70=v70 + (926 -(341 + 584)) ;end end elseif (((7245 -2837)==(1017 + 3391)) and (v90<=(435 -(116 + 277)))) then v87[v89[2]]=v87[v89[5 -2 ]] * v87[v89[2 + 2 ]] ;elseif ((v90==(110 -(7 + 60))) or (3786<(108 + (330 -(68 + 99))))) then local v215=0 -0 ;local v216;local v217;local v218;local v219;while true do if (((2538 -1319)<=(2583 -(154 + 348))) and (2==v215)) then while true do if ((v216==((1973 -767) -(577 + 628))) or ((4957 -2415)==1072)) then v219=1202 -(45 + 1157) ;for v304=v217,v89[10 -6 ] do local v305=1551 -(385 + 462 + 704) ;local v306;while true do if ((v305==(0 + 0)) or ((1037 -(203 + 534))>=(4365 -(6 + 119 + 91)))) then v306=0 -0 ;while true do if ((v306==(0 -(0 + 0))) or (3034<(386 + 1951))) then v219=v219 + 1 + 0 ;v87[v304]=v218[v219];break;end end break;end end end break;end if ((v216==(0 -0)) or ((4499 -(38 + 250))<(10883 -7211))) then local v293=(125 + 31) -(133 + 23) ;while true do if (((15604 -11428)==(14513 -10337)) and (v293==(0 + 0))) then v217=v89[5 -3 ];v218={v87[v217](v13(v87,v217 + 1 + 0 ,v71))};v293=1 + 0 ;end if ((v293==1) or ((4060 -(649 + 1))<(177 -83))) then v216=2 -1 ;break;end end end end break;end if ((v215==0) or (2859<(1879 -1375))) then v216=0 -0 ;v217=nil;v215=4 -3 ;end if ((v215==(1 + 0)) or ((6278 -(6102 -(1236 + 729)))>(5526 -3118))) then v218=nil;v219=nil;v215=2;end end else local v220=0 -(608 -(242 + 366)) ;local v221;local v222;local v223;local v224;while true do if (((700 + 3446)>(5410 -3229)) and (0==v220)) then v221=179 -((155 -113) + 137) ;v222=nil;v220=1 + 0 ;end if ((2135>=1380) and (v220==2)) then while true do if ((2030<=((3501 -(60 + 745)) + 2281)) and (v221==(1107 -(6 + 1101)))) then v222=v89[554 -(170 + 382) ];v223=v87[v222];v221=1 + 0 ;end if ((v221==(1 + 0)) or ((270 + 440)==(5348 -(101 + 588 + 363)))) then v224=v89[13 -10 ];for v307=4 -3 ,v224 do v223[v307]=v87[v222 + v307 ];end break;end end break;end if ((v220==(188 -(156 + 31))) or ((6439 -4676)>=(631 + 4062))) then v223=nil;v224=nil;v220=2;end end end v70=v70 + (1 -0) ;break;end end break;end end end end v69=3;end if (v69==1) then v72={...};v73=v12("#",...) -1 ;v69=2;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
