--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (2==v18) then function v22()local v31=0 + 0 ;local v32;while true do if (v31==(0 -(710 -(396 + 314)))) then v32=v1(v16,v19,v19);v19=v19 + 1 ;v31=1 + 0 ;end if (v31==(857 -((3418 -2693) + (550 -419)))) then return v32;end end end v23=nil;function v23()local v33,v34=v1(v16,v19,v19 + (1580 -(1530 + 48)) );v19=v19 + (7 -5) ;return (v34 * (218 + 38)) + v33 ;end v18=3;end if (3==v18) then v24=nil;function v24()local v35=0 + 0 ;local v36;local v37;local v38;local v39;while true do if ((161 -((103 -75) + 133))==v35) then v36,v37,v38,v39=v1(v16,v19,v19 + 3 );v19=v19 + (621 -(345 + 272)) ;v35=1 + 0 ;end if (v35==1) then return (v39 * ((18249730 + 7548776) -9021290)) + (v38 * (133234 -67698)) + (v37 * (1377 -(377 + 744))) + v36 ;end end end v25=nil;v18=4;end if (5==v18) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v40,v41,v42)local v43=0;local v44;local v45;local v46;while true do if (v43==0) then v44=v40[1];v45=v40[2];v43=1;end if (v43==1) then v46=v40[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v12("#",...) -1 ;local function v80()local v84=v44;local v85=v45;local v86=v46;local v87=v28;local v88={};local v89={};local v90={};for v94=0 -0 ,v79 do if ((180<(10825 -5838)) and (v94>=v86)) then v88[v94-v86 ]=v78[v94 + 1 + 0 ];else v90[v94]=v78[v94 + (1 -0) ];end end local v91=(v79-v86) + (1806 -(897 + 908)) ;local v92;local v93;while true do local v95=0 + 0 ;local v96;local v97;while true do if (((5333 -(214 + 407))>=2372) and (v95==(1759 -(102 + 1657)))) then v96=0 + 0 ;v97=nil;v95=1787 -((1436 -(26 + 12)) + 388) ;end if (((2898 -(239 + 119))==(202 + 2338)) and (v95==1)) then while true do if ((4803>(3577 -(87 + 180))) and (v96==(0 + 0))) then v97=0;while true do if ((v97==1) or ((4465 -(384 + 1065))>=3610)) then if (((3227 -(587 + 79))>(2095 + 370)) and (v93<=(67 -46))) then if ((v93<=(20 -10)) or (((4963 -(46 + 139)) -(574 + 43 + 191))==(1400 -281))) then if ((v93<=(1824 -(520 + 1300))) or ((3241 -(496 + 198))>(4522 -(19 + 81)))) then if ((v93<=1) or (3179<((4277 -(463 + 1160)) -(19 + 103 + 452)))) then if ((v93>(0 -0)) or (((10651 -6848) -(341 + 2))<(3251 -(120 + 92)))) then local v141=0;local v142;local v143;local v144;local v145;local v146;while true do if (((11311 -8795)>(1901 -(540 + 1217))) and (v141==(709 -(194 + 515)))) then local v245=1541 -(1178 + 363) ;while true do if ((v245==(1 + 0 + 0)) or ((1040 -(243 + 47))>=(1840 -(35 + 56)))) then v141=4 -3 ;break;end if ((v245==((0 + 0) -0)) or ((1170 + 2093)==(2260 + 682))) then v142=0;v143=nil;v245=1 + 0 ;end end end if ((v141==((176 -(90 + 84)) -1)) or (((3557 + 181) -1213)>(6179 -3596))) then local v246=0 -0 ;while true do if ((2860==(926 + 1934)) and (v246==(0 -0))) then v144=nil;v145=nil;v246=(1 -0) + 0 ;end if (((688 + (3927 -(117 + 1786)))>(52 + 75)) and (v246==((1 -0) + 0))) then v141=(459 -(442 + 13)) -2 ;break;end end end if (((2002 + 1805)<(5666 -(125 + 609))) and (v141==2)) then v146=nil;while true do if ((v142==2) or ((560 + 659)>=(11247 -6611))) then for v286=v143,v77 do local v287=0 -0 ;while true do if ((v287==(908 -(774 + 134))) or ((15793 -11266)<=((1771 + 3195) -(866 + 706)))) then v146=v146 + 1 ;v90[v286]=v144[v146];break;end end end break;end if ((v142==0) or ((6471 -3460)>=(3940 -(43 + 3)))) then local v268=0 -0 ;local v269;while true do if ((v268==0) or (((192 -60) + 3047)<=439)) then v269=0 -0 ;while true do if ((v269==0) or ((466 + 116)>((704 + 798) -(122 + 56)))) then local v339=0;while true do if (((3117 -(221 + 485))>(71 + 1621)) and (v339==(1220 -(248 + 972)))) then v143=v92[1 + 1 ];v144,v145=v87(v90[v143](v90[v143 + (1219 -(742 + 476)) ]));v339=1;end if (((4370 -(551 + 560 + 429))<=(4768 -(186 + 473))) and (v339==(1795 -(1776 + 18)))) then v269=(189 + 1187) -(1228 + 147) ;break;end end end if ((v269==(2 -1)) or (2610<(2360 -1567))) then v142=1;break;end end break;end end end if ((v142==(1 + 0)) or (((13990 -8415) -((1094 -709) + 754))<(1384 -857))) then local v270=139 -(31 + 108) ;while true do if ((v270==(1 -0)) or (3800==3112)) then v142=2 + 0 ;break;end if ((v270==(0 + 0)) or ((4386 -3184)>(13422 -9777))) then v77=(v145 + v143) -(1 + 0) ;v146=710 -(88 + 622) ;v270=1 + 0 ;end end end end break;end end else v90[v92[(161 + 359) -(356 + 127 + 35) ]]=v92[59 -(25 + 1 + 30) ]~=(0 -0) ;end elseif ((v93<=(1407 -(139 + 1266))) or (((12157 -(52 + 82)) -8953)>(1239 + 2678))) then if ( not v90[v92[1 + 1 ]] or ((5316 -(404 + 162))==(614 + 638))) then v76=v76 + 1 + 0 ;else v76=v92[3 + (0 -0) ];end elseif (((4004 -(887 + 333))<=(11395 -8235)) and (v93==3)) then local v187=869 -(32 + 837) ;local v188;local v189;local v190;while true do if ((v187==(1 + 0)) or ((3353 -(339 + 1328))==(624 + 3841))) then v190=nil;while true do if ((v188==(443 -(87 + 355))) or ((14694 -10875)<=(4018 -(118 + 90)))) then for v320=v189 + 1 + 0 ,v92[14 -10 ] do v190=v190   .. v90[v320] ;end v90[v92[4 -(103 -(24 + 77)) ]]=v190;break;end if (((5230 -3907)>=(2251 -(1193 + (2242 -1442)))) and (v188==(0 -0))) then v189=v92[3];v190=v90[v189];v188=1;end end break;end if ((v187==(0 -0)) or (((1322 -948) + 1206)>(2059 + 1268))) then v188=1531 -(163 + 1368) ;v189=nil;v187=1;end end elseif ((v92[1 + 1 ]<v90[v92[4]]) or ((10 + (406 -(138 + 159)))>4557)) then v76=v76 + 1 + 0 ;else v76=v92[1 + 0 + 2 ];end elseif ((1036<=(5185 -(219 + 77))) and (v93<=7)) then if ((v93<=(639 -(209 + 425))) or ((1113 -818)>=(4765 + 115))) then if (v90[v92[2]] or ((457 + 403)>(11515 -(8183 -(345 + 1131))))) then v76=v76 + (109 -(41 + 67)) ;else v76=v92[3 -0 ];end elseif ((v93>(740 -(264 + 180 + 290))) or ((34 -17)>=(913 -(715 + 33)))) then local v192=0;local v193;local v194;local v195;while true do if ((v192==(0 -(0 + 0))) or (((969 + 5834) -2823)<=1423)) then v193=0 -0 ;v194=nil;v192=1;end if ((((10642 -4650) -(449 + 1235))==4308) and (v192==(1 -0))) then v195=nil;while true do if (((0 + 0)==v193) or ((1495 + 462)>(3223 -(73 + 252)))) then local v306=0;while true do if ((0==v306) or (3452==(4897 -2279))) then v194=195 -(74 + (167 -46)) ;v195=nil;v306=(1 + 0) -0 ;end if ((3158>(3038 -(970 + 149 + 69))) and (v306==(312 -((349 -256) + 218)))) then v193=1713 -(1251 + (2119 -(1356 + 302))) ;break;end end end if (((898 -421)<((8493 -5646) -2018)) and (v193==(1 + 0))) then while true do if ((v194==(1869 -(655 + 1214))) or ((15927 -11817)>=(16794 -12005))) then v195=v92[404 -(300 + 102) ];v90[v195]=v90[v195](v13(v90,v195 + 1 ,v92[1 + 2 ]));break;end end break;end end break;end end else v90[v92[1572 -(1473 + 97) ]]=v90[v92[(7 -4) + 0 ]]/v92[6 -2 ] ;end elseif ((v93<=(1 + 7)) or ((4209 -3140)>=(1789 + 1839))) then v90[v92[(3432 -(1425 + 360)) -(65 + 1580) ]]=v42[v92[1680 -(1385 + 292) ]];elseif ((v93==9) or ((5433 -3471)==(1913 + 390))) then v90[v92[2]]=v90[v92[2 + 1 + 0 ]][v92[10 -6 ]];else v90[v92[3 -1 ]]=v90[v92[(1350 + 164) -(551 + 960) ]] -v90[v92[1057 -(207 + 846) ]] ;end elseif ((v93<=(111 -(64 + 32))) or ((783 -461)>1940)) then if ((v93<=(1092 -(250 + 830))) or ((1119 -(1650 -911))==1583)) then if (((1047 -((1258 -(183 + 1059)) + 92))<=(2863 + 1532)) and (v93==(1564 -(268 + 1285)))) then v90[v92[6 -4 ]]=v41[v92[1 + 2 ]];else local v152=v92[4 -(1 + 1) ];local v153=v92[4];local v154=v152 + (3 -1) ;local v155={v90[v152](v90[v152 + 1 ],v90[v154])};for v183=1,v153 do v90[v154 + v183 ]=v155[v183];end local v156=v155[1 + 0 ];if (v156 or ((6608 -3721)>=(1944 + 2349))) then local v200=614 -(329 + 285) ;local v201;while true do if ((((808 + 1008) -(791 + 332))<2052) and (v200==(960 -(184 + 776)))) then v201=0 -0 ;while true do if (((0 + 0)==v201) or (4235==(4982 -1833))) then v90[v154]=v156;v76=v92[3 + (136 -(14 + 122)) ];break;end end break;end end else v76=v76 + (2 -1) ;end end elseif ((v93<=(36 -23)) or ((346 + 509)>(4019 -(568 + 59)))) then v90[v92[2]][v92[3 + 0 ]]=v90[v92[11 -7 ]];elseif ((165==(82 + 83)) and (v93>(8 + 6))) then v90[v92[1 + 1 ]]=v92[3];else for v247=v92[2],v92[3] do v90[v247]=nil;end end elseif ((v93<=(40 -22)) or (2259<=(132 + 322))) then if ((v93<=(35 -19)) or ((6277 -4360)>1985)) then local v159=0;local v160;local v161;local v162;local v163;while true do if ((((3106 + 206) -(139 + 214 + 926))==(2722 -(88 + 601))) and (v159==(0 -0))) then v160=(449 -(147 + 302)) + 0 ;v161=nil;v159=1943 -(1361 + 581) ;end if (((6215 -1629)==(6288 -(493 + 1209))) and (v159==(1 -0))) then v162=nil;v163=nil;v159=5 -(1846 -(1403 + 440)) ;end if (((769 -(286 + 481))==v159) or ((938 + 2653)>=(5462 -(78 + 568)))) then while true do if ((v160==(1 + 0)) or ((4896 -3441)>(5186 -3214))) then v163=0 + 0 ;for v288=v161,v92[(1698 -(890 + 806)) + 1 + 1 ] do local v289=0;while true do if (((5163 -(2030 + 1288))<=(5927 -3940)) and (v289==(1121 -(758 + 57 + 306)))) then v163=v163 + 1 + 0 ;v90[v288]=v162[v163];break;end end end break;end if ((v160==((1495 -(29 + 40)) -(1004 + 422))) or ((19 + 878)>3335)) then local v271=0 -0 ;while true do if (((5769 -2028)<(2813 + 2158)) and (v271==(0 + 0))) then v161=v92[4 -2 ];v162={v90[v161](v90[v161 + ((167 + 258) -(79 + 345)) ])};v271=1 + 0 ;end if ((v271==1) or ((961 -(97 + 311))==4068)) then v160=811 -(771 + 39) ;break;end end end end break;end end elseif ((v93>17) or ((6655 -(214 + 1473))<(5012 -2279))) then local v204=1385 -(1064 + 321) ;local v205;local v206;local v207;local v208;local v209;local v210;while true do if ((v204==(0 -0)) or ((1070 + 3612)>4830)) then v205=0;v206=nil;v204=1206 -(444 + 761) ;end if ((1977<=(9735 -5506)) and (v204==(2 -0))) then v209=nil;v210=nil;v204=3 + 0 ;end if ((891<=(3080 + 48 + 503)) and (v204==(1930 -(918 + 1009)))) then while true do if ((v205==(1 -0)) or ((392 -(163 + 137))>=(4596 -(20 + 2)))) then local v309=0;while true do if ((v309==(1499 -(499 + 1000))) or (4508<(6286 -4063))) then v208=nil;v209=nil;v309=1 -0 ;end if (((1036 + 3120)<=(13257 -(24859 -16276))) and (((1367 -(543 + 823)) + 0)==v309)) then v205=3 -1 ;break;end end end if ((((23963 -18915) -(371 + 36))>((3671 + 783) -2592)) and (v205==(1474 -(433 + 1039)))) then v210=nil;while true do if (((352 + 1601)<(1737 + 1309)) and (v206==(1 -0))) then local v332=0 -0 ;local v333;while true do if ((1625<3353) and (v332==(0 + 0))) then v333=1703 -(1612 + 91) ;while true do if ((v333==(1 + 0)) or (321==(3562 + 1433))) then v206=1103 -(140 + 961) ;break;end if ((3276>=2067) and (v333==0)) then v77=(v209 + v207) -1 ;v210=422 -(5 + 417) ;v333=1 + 0 ;end end break;end end end if (((0 -0)==v206) or (3167<(467 + 509))) then local v334=236 -(62 + 174) ;local v335;while true do if (((5130 -((472 -(16 + 282)) + 188))>=4331) and (v334==(52 -(40 + 12)))) then v335=0 + 0 ;while true do if ((v335==0) or ((2259 -(523 + 841))==(434 -169))) then local v366=0 -0 ;while true do if (((4472 -2813)<4652) and (v366==(0 -0))) then v207=v92[135 -(110 + 23) ];v208,v209=v87(v90[v207](v13(v90,v207 + ((135 + 646) -(379 + (1661 -1260))) ,v92[2 + 1 ])));v366=1 -0 ;end if ((v366==(1216 -(754 + 461))) or (698>=2797)) then v335=1776 -(425 + (3150 -(1588 + 212))) ;break;end end end if (((1142 + 113)<(3698 -(1013 + 66))) and (v335==(1 + 0))) then v206=102 -(36 + 65) ;break;end end break;end end end if (((2691 -1756)>((797 -(130 + 376)) + 453)) and (v206==(891 -(369 + 520)))) then for v340=v207,v77 do local v341=0 -0 ;local v342;local v343;while true do if (((13414 -9684)>=(9573 -6884)) and (((0 -0) -0)==v341)) then v342=724 -((816 -(323 + 446)) + 677) ;v343=nil;v341=1202 -(387 + 814) ;end if ((v341==1) or ((351 + 71)>3972)) then while true do if ((((0 + 0) -0)==v342) or (4197==3940)) then v343=629 -(584 + 45) ;while true do if (((3234 -(62 + 19))<(4721 -(1065 + 13))) and (v343==(0 + 0))) then v210=v210 + 1 ;v90[v340]=v208[v210];break;end end break;end end break;end end end break;end end break;end if ((0==v205) or ((5678 -3013)<(7961 -5834))) then v206=0 + 0 ;v207=nil;v205=1;end end break;end if ((((4095 -(1175 + 231)) -(795 + (797 -605)))<(3213 -(99 + 277))) and (v204==(1 -0))) then v207=nil;v208=nil;v204=7 -5 ;end end else local v211=453 -(352 + (323 -222)) ;local v212;local v213;local v214;while true do if (((3631 -((2112 -(13 + 1646)) + 884))>((2589 -(1225 + 327)) -(23 + 11))) and (v211==0)) then v212=1774 -(1216 + 558) ;v213=nil;v211=1;end if (((12475 -(1384 + 7174))>=(7790 -(16099 -10979))) and (v211==(1 -0))) then v214=nil;while true do if (((3249 -((2766 -2145) + 632))==1996) and (v212==(0 + 0))) then local v310=0 -0 ;while true do if (((1058 -640)<(3614 + 906)) and (v310==(2 -1))) then v212=1;break;end if (((1231 -775)==(791 -335)) and (v310==0)) then v213=v92[5 -3 ];v214=v90[v92[3]];v310=1 + 0 ;end end end if ((v212==(1 -0)) or (3759<=(1829 + (190 -126)))) then v90[v213 + 1 + 0 ]=v214;v90[v213]=v214[v92[12 -(19 -11) ]];break;end end break;end end end elseif ((4251>(1288 + 1484)) and (v93<=19)) then if ((1950<((6377 -(473 + 41)) -3038)) and (v92[5 -3 ]==v90[v92[4]])) then v76=v76 + (1269 -(804 + 464)) ;else v76=v92[3];end elseif ((v93>(1240 -(333 + 887))) or ((2999 -(36 + (66 -48)))==(2454 -1598))) then if (((89 + 3246)<=(5221 -(1060 + 140))) and (v90[v92[1367 -(771 + 594) ]]==v90[v92[10 -(22 -16) ]])) then v76=v76 + (2 -1) ;else v76=v92[3 -0 ];end else local v216=0 -0 ;local v217;local v218;local v219;while true do if ((1==v216) or ((9039 -6499)<=2333)) then v219=nil;while true do if ((v217==1) or ((65 + (1227 -736))>(5553 -4120))) then for v322=v218 + 1 ,v92[3] do v7(v219,v90[v322]);end break;end if ((v217==(271 -(42 + 229))) or (2629>=(4785 -(662 + 456)))) then v218=v92[3 -1 ];v219=v90[v218];v217=1898 -(593 + 1304) ;end end break;end if ((v216==(814 -(624 + 190))) or ((1274 + 3381)<(5577 -4121))) then v217=0 -(0 + 0) ;v218=nil;v216=744 -(605 + 138) ;end end end elseif ((2252>=(463 + 186)) and (v93<=(486 -(8 + 446)))) then if ((v93<=(11 + 15)) or ((887 + 114)>=(140 + 4252))) then if (((3178 -(1590 + 41))<=(5110 -(923 + 677))) and (v93<=(47 -24))) then if ((v93>(447 -(200 + 225))) or ((748 + 470)>((5782 + 1871) -4566))) then v90[v92[(962 + 780) -(642 + 1098) ]]=v90[v92[8 -5 ]] + v90[v92[3 + 1 ]] ;else v90[v92[3 -1 ]]={};end elseif (((4663 -((396 -(222 + 55)) + 14))==(8641 -4111)) and (v93<=(15 + 9))) then v90[v92[7 -5 ]]=v90[v92[3]]/v90[v92[(78 + 27) -(24 + 77) ]] ;elseif (((7416 -5728)<2601) and (v93>(88 -63))) then local v220=0;local v221;local v222;local v223;while true do if ((((14578 -11641) + 666)==(10540 -6937)) and (v220==(0 -(1535 -(1222 + 313))))) then local v265=0;while true do if (((10412 -6894)==3518) and (((401 -(35 + 365)) -0)==v265)) then v220=2 -1 ;break;end if ((v265==0) or ((4534 -(1509 + 328))<=(38 + 737))) then v221=v92[977 -(898 + 77) ];v222={v90[v221](v13(v90,v221 + 1 + 0 ,v77))};v265=1193 -(611 + 581) ;end end end if ((v220==(235 -(146 + 88))) or ((3660 -(10 + 75))<2322)) then v223=0 + 0 ;for v272=v221,v92[(97 + 522) -(277 + 338) ] do local v273=618 -(81 + 537) ;local v274;while true do if ((v273==(0 -0)) or ((802 -(5 + 24))<(594 -328))) then v274=0;while true do if ((v274==(0 -0)) or (319>(7065 -2126))) then v223=v223 + 1 + 0 ;v90[v272]=v222[v223];break;end end break;end end end break;end end else v90[v92[8 -6 ]][v92[7 -4 ]]=v92[4];end elseif ((((10540 -5441) -(360 + 347))==4392) and (v93<=(85 -56))) then if (((1506 -(38 + 155))<=((1747 -1131) + 981)) and (v93<=27)) then local v167=0 -0 ;local v168;local v169;local v170;while true do if (((25 + 1581)<(1137 + 1215)) and (v167==(637 -(600 + 36)))) then local v249=0;while true do if (((5532 -(249 + 474))>=(6543 -(753 + (1282 -(98 + 46))))) and (v249==(998 -(933 + 65)))) then v170={};v169=v10({},{__index=function(v290,v291)local v292=(0 + 0) -0 ;local v293;local v294;while true do if ((v292==1) or ((1931 + 772 + 1706)==(5275 -(508 + 46)))) then while true do if ((2728>(266 + 698)) and (v293==(0 -0))) then local v349=556 -(414 + 142) ;while true do if ((v349==(0 -0)) or (1559>=(929 + 3105))) then v294=v170[v291];return v294[1282 -(7 + 1274) ][v294[6 -4 ]];end end end end break;end if (((2123 -(80 + 347))<=(9144 -5119)) and (v292==((0 + 0) -0))) then v293=0 -0 ;v294=nil;v292=1302 -(810 + 491) ;end end end,__newindex=function(v295,v296,v297)local v298=1680 -(1331 + 349) ;local v299;local v300;while true do if ((v298==(0 -0)) or ((4188 -(222 + 297))<((6181 -(1694 + 79)) -(1023 + 653)))) then v299=0 -0 ;v300=nil;v298=199 -(102 + (521 -(216 + 209))) ;end if ((v298==(1 -0)) or ((3282 + 262)==(6822 -4073))) then while true do if ((210<(3447 -(732 + 1137))) and (((1022 + 314) -(488 + 848))==v299)) then v300=v170[v296];v300[2 -1 ][v300[894 -(62 + 830) ]]=v297;break;end end break;end end end});v249=1 + 0 + 0 ;end if ((2608==(590 + 2018)) and (v249==((1 -0) + 0))) then v167=25 -(21 + 2) ;break;end end end if ((v167==(563 -(212 + 351))) or ((7249 -4838)>(947 + 2068))) then local v250=0;while true do if ((v250==(1511 -(1451 + 59))) or ((1258 + (2192 -(135 + 639)))==(1358 -(10 + 131)))) then v167=1132 -(388 + 743) ;break;end if ((2293>(7742 -(5389 + 195))) and ((0 -0)==v250)) then v168=v85[v92[1 + 2 ]];v169=nil;v250=1;end end end if ((v167==(7 -5)) or (3057>=(176 + 4149))) then for v256=3 -2 ,v92[1074 -(81 + (2618 -1629)) ] do local v257=0;local v258;local v259;while true do if (((2307 -(62 + (102 -52)))<=(6197 -2966)) and (v257==(1 + 0 + 0))) then while true do if (((2382 + 732)<(10644 -7430)) and (v258==(1 + 0))) then if (((3328 -1966)>=(1877 -(274 + 303 + 17))) and (v259[1]==(1149 -(754 + 367)))) then v170[v256-1 ]={v90,v259[714 -(204 + 507) ]};else v170[v256-(1463 -((3670 -2572) + (1271 -907))) ]={v41,v259[3]};end v89[ #v89 + (1413 -(288 + 1057 + 67)) ]=v170;break;end if (((71 -(25 + 9 + 23))<(3834 -(1156 + 525))) and ((0 + 0 + 0)==v258)) then v76=v76 + (107 -(83 + (1993 -(1164 + 806)))) ;v259=v84[v76];v258=1;end end break;end if ((v257==(0 -(0 -0))) or (2857<=47)) then v258=749 -(193 + 556) ;v259=nil;v257=1 -0 ;end end end v90[v92[1987 -(1965 + 20) ]]=v30(v168,v169,v42);break;end end elseif ((v93==(1959 -(512 + 1081 + 338))) or ((5754 -((863 -478) + 125 + 1255))<(2084 -(5 + 27)))) then v90[v92[2]]=v90[v92[5 -2 ]];else v90[v92[1 + 1 ]]();end elseif ((v93<=(79 -49)) or ((1057 + 3530)<=2022)) then if ((v90[v92[43 -(14 + 27) ]]==v92[2 + 2 ]) or ((782 + 456)==3989)) then v76=v76 + 1 + 0 ;else v76=v92[3];end elseif (((20 + 405)==((2809 -(84 + 687)) -(190 + 1423))) and (v93==31)) then if (((4308 -(1490 + 483))<=(5364 -2606)) and (v92[1416 -(438 + 976) ]<=v90[v92[4]])) then v76=v76 + 1 + (1912 -(1472 + 440)) ;else v76=v92[2 + 1 ];end else local v229=(0 + 0) -0 ;local v230;while true do if ((v229==((0 + 0) -0)) or ((1766 -(870 + 815))>=(6081 -3953))) then v230=v92[3 -1 ];v90[v230](v13(v90,v230 + 1 ,v92[433 -(66 + (457 -(55 + 38))) ]));break;end end end elseif ((v93<=(929 -(238 + 653))) or ((2507 -(142 + 1829))==(2605 + 1629))) then if (((1717 -(12 + 108))<=(2789 + (1738 -(580 + 414)))) and (v93<=(142 -((59 -43) + 91)))) then if (((152 + 2040)==(2479 -(231 + 56))) and (v93<=(26 + 7))) then local v171=0;local v172;local v173;local v174;while true do if ((v171==(790 -(296 + 404 + 90))) or ((806 + 787)>(3091 + 409))) then local v252=0 + 0 ;while true do if ((v252==(0 + 0 + 0)) or ((2067 -(43 + 588))>=(4 + 4169))) then v172=v92[2 + 0 ];v173=v90[v172];v252=1 + 0 ;end if ((v252==1) or ((123 + 1073)>(1531 + 3047))) then v171=579 -(495 + (259 -(39 + 137))) ;break;end end end if (((12323 -7762)>(4361 -(1086 + 898))) and (v171==(1259 -((1394 -(29 + 873)) + 766)))) then v174=v92[4 -1 ];for v261=1 + 0 ,v174 do v173[v261]=v90[v172 + v261 ];end break;end end elseif (((3010 -(756 + 269))==(741 + 1244)) and (v93==(85 -51))) then if ((v90[v92[2]]<v90[v92[1813 -(1152 + 657) ]]) or ((3672 -(168 + 3))<((2588 + 238) -1335))) then v76=v76 + (2 -1) + 0 ;else v76=v92[2 + 1 ];end else v90[v92[641 -(270 + 369) ]]=v90[v92[1964 -(1386 + 575) ]] * v90[v92[2 + 2 ]] ;end elseif ((((10575 + 4308) -10804)>(1496 + 1077)) and (v93<=(673 -(125 + 512)))) then v42[v92[1 + 2 ]]=v90[v92[1800 -(1453 + 345) ]];elseif ((v93>37) or ((4189 -(4889 -2031))>(5638 -2972))) then do return;end else v76=v92[1 + 2 ];end elseif ((v93<=(2 + 39)) or (4800<=3080)) then if ((v93<=(21 + 18)) or ((1498 + 465)<(1228 + (661 -(162 + 193))))) then local v177=0;local v178;local v179;while true do if (((9850 -6119)>(8965 -6539)) and (v177==1)) then while true do if ((v178==(0 + 0)) or ((604 + 2146)<=144)) then v179=v92[2 -0 ];v90[v179]=v90[v179]();break;end end break;end if (((11 + 124)<(45 + 119)) and (v177==(0 -0))) then v178=0 -0 ;v179=nil;v177=2 -1 ;end end elseif ((v93==((1864 -(1653 + 47)) -124)) or ((1237 -(2199 -1473))==(1058 -(61 + 621)))) then v90[v92[9 -7 ]]=v90[v92[(17 -10) -4 ]] + v92[8 -4 ] ;else local v234=0 + 0 ;local v235;local v236;while true do if ((v234==(175 -(27 + 147))) or ((4411 -(986 + 404 + 259))<(64 + (7779 -5204)))) then while true do if (((2956 -(2715 -1006))<=(5458 -(318 + 1654))) and (v235==(0 -0))) then v236=v92[(10 -5) -3 ];v90[v236](v90[v236 + (1074 -(942 + 131)) ]);break;end end break;end if (((8006 -4363)<=(5511 -(761 + 108))) and (v234==0)) then v235=29 -(18 + 11) ;v236=nil;v234=1 + 0 ;end end end elseif ((v93<=(70 -(35 -7))) or ((4254 -(354 + 290))<=(418 + 1032))) then local v180=0 -0 ;local v181;local v182;while true do if (((1850 + 522)>(93 -(1587 -(1527 + 9)))) and (v180==(279 -(169 + 110)))) then v181=1954 -(786 + 1168) ;v182=nil;v180=1 -0 ;end if (((2892 + 315)>=(2762 -1344)) and (v180==(2 -1))) then while true do if ((v181==((630 + 1008) -(1209 + 429))) or ((1713 + 2205)<(117 + 233))) then v182=v92[1 + 1 ];v90[v182]=v90[v182](v90[v182 + (1 -0) ]);break;end end break;end end elseif ((v93>(99 -56)) or (3411<(159 + 2442))) then local v237=0 + 0 ;local v238;local v239;while true do if ((v237==(1139 -(239 + 900))) or (1658==(6923 -2680))) then v238=1617 -(1532 + 85) ;v239=nil;v237=1 -0 ;end if (((72 + 47)<(3716 -1748)) and (v237==(1 + 0))) then while true do if ((v238==(0 -0)) or ((1444 -(202 + 92))<(3720 -2957))) then v239=v92[452 -(257 + 193) ];v90[v239](v13(v90,v239 + 1 + 0 ,v77));break;end end break;end end else local v240=0 + 0 ;local v241;local v242;while true do if (((390 + 1462)>70) and (v240==1)) then for v282=1 -0 , #v89 do local v283=0 + 0 ;local v284;local v285;while true do if ((2822>=(5670 -2982)) and (v283==0)) then v284=(177 + 13) -(146 + 44) ;v285=nil;v283=1 + 0 ;end if (((705 + 81 + 96)<=(24 + 4835)) and (v283==(1 -0))) then while true do if ((v284==(0 + 0)) or ((1169 -(2500 -(396 + 1523)))>=1281)) then v285=v89[v282];for v352=0 + 0 , #v285 do local v353=0;local v354;local v355;local v356;local v357;local v358;while true do if (((3894 -2008)>=694) and (v353==((541 -187) -(286 + 68)))) then v354=0 + 0 ;v355=nil;v353=2 -1 ;end if (((547 + 2540)>(2552 -1022)) and (v353==(1 + 0))) then v356=nil;v357=nil;v353=1 + 1 ;end if (((9190 -6316)<(4120 -((3095 -2458) + 216))) and (v353==(6 -4))) then v358=nil;while true do if ((v354==(2 -1)) or (3954==(11207 -6480))) then v357=nil;v358=nil;v354=5 -3 ;end if ((v354==(1412 -(17 + 1393))) or ((1052 + 2713)<=(3976 -(781 + 748)))) then while true do if (((207 + 323)==(1610 -(871 + 209))) and (v355==(0 -0))) then local v371=0 + 0 ;while true do if ((v371==(1 -0)) or ((314 + 679)<=(61 -13))) then v355=1 + 0 ;break;end if (((5313 -3123)<=(9972 -6009)) and (v371==(0 + 0))) then local v376=0 + 0 ;while true do if (((1117 -(65 + 1051))==v376) or (((5789 -(1084 + 779)) -2244)>=(1171 + 2885))) then v371=1329 -(26 + 1302) ;break;end if ((0==v376) or (4756<((5481 -1893) -(367 + 260)))) then v356=v285[v352];v357=v356[1680 -(1067 + 612) ];v376=1 + 0 ;end end end end end if ((4981>(5419 -(1344 + 530))) and (v355==(4 -3))) then v358=v356[3 -1 ];if ((((9896 -(297 + 1019)) -5458)==3122) and (v357==v90) and (v358>=v241)) then local v373=0 -0 ;local v374;local v375;while true do if (((7441 -5628)==(3987 -2174)) and (v373==((3583 -2248) -(50 + 900 + (1384 -(990 + 10)))))) then while true do if ((1232<=1476) and (v374==(932 -(36 + 896)))) then v375=0;while true do if ((0==v375) or ((3406 -(357 + 427))==(365 + 443))) then v242[v358]=v357[v358];v356[1]=v242;break;end end break;end end break;end if (((5427 -2740)>(8604 -6043)) and (v373==0)) then v374=0 + (522 -(380 + 142)) ;v375=nil;v373=1;end end end break;end end break;end if ((v354==(1861 -(181 + (4503 -2823)))) or ((3203 -(115 + 1502))<1287)) then local v367=0;while true do if (((1 + 0)==v367) or ((10258 -(1047 + 6286))<=(341 -182))) then v354=1 + 0 + (282 -(275 + 7)) ;break;end if (((16356 -(27478 -15965))>(20 + 379)) and (v367==0)) then v355=55 -(26 + 29) ;v356=nil;v367=3 -2 ;end end end end break;end end end break;end end break;end end end break;end if (((1136 -(63 + 40))<(1724 + 3044)) and (v240==0)) then local v267=0;while true do if (((6751 -5139)<(409 + 1711)) and (v267==(127 -(58 + 68)))) then v240=1;break;end if ((976>=875) and (v267==(0 -0))) then v241=v92[2];v242={};v267=2 -1 ;end end end end end v76=v76 + (1450 -(85 + 1364)) ;break;end if ((v97==0) or ((397 + 1882)>=(1143 + 3238))) then local v119=0;while true do if (((2763 -775)>(379 + 238)) and ((1895 -(863 + 1031))==v119)) then v97=469 -(44 + 424) ;break;end if ((v119==(0 -0)) or ((18158 -(5230 + 8109))<=(11022 -6215))) then local v125=0 -0 ;while true do if ((v125==(52 -((500 -(347 + 113)) + 11))) or ((8427 -6072)<(3515 -2207))) then v119=1145 -(1129 + 15) ;break;end if ((3970>=827) and (v125==0)) then v92=v84[v76];v93=v92[1 + 0 ];v125=1689 -(445 + 1243) ;end end end end end end break;end end break;end end end end A,B=v28(v11(v80));if  not A[1] then local v98=v40[4][v76] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end return v30(v29(),{},v17)(...);end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v47)if (v1(v47,2)==79) then local v69=0;while true do if (v69==0) then v20=v0(v3(v47,1,1));return "";end end else local v70=v2(v0(v47,16));if v20 then local v81=v5(v70,v20);v20=nil;return v81;else return v70;end end end);v18=1;end if (v18==4) then function v25()local v48=v24();local v49=v24();local v50=(973 + 565) -(995 + 542) ;local v51=(v21(v49,3 -2 ,596 -((652 -(229 + 292)) + 234 + 211) ) * ((2 + 0)^(75 -43))) + v48 ;local v52=v21(v49,16 + 5 ,1361 -(400 + 930) );local v53=((v21(v49,1870 -(1683 + (338 -183)) )==1) and  -(2 -1)) or 1 ;if (v52==(0 -0)) then if (v51==(0 -0)) then return v53 * (1602 -(1576 + 26)) ;else v52=(52 + 73) -(96 + 28) ;v50=0 + 0 ;end elseif (v52==(3501 -1454)) then return ((v51==(0 + 0 + 0)) and (v53 * ((1 -0)/(0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-1023 ) * (v50 + (v51/((56 -(7 + 47))^((56 + 93) -(219 -122))))) ;end v26=nil;function v26(v54)local v55=0;local v56;local v57;while true do if ((0 + 0 + 0)==v55) then v56=nil;if  not v54 then v54=v24();if (v54==(1204 -(1184 + 3 + 17))) then return "";end end v55=2 -1 ;end if (v55==(1806 -(1566 + 237))) then return v6(v57);end if ((1 + (1860 -(539 + 1320)))==v55) then v57={};for v82=1 + (0 -0) , #v56 do v57[v82]=v2(v1(v3(v56,v82,v82)));end v55=398 -(313 + 82) ;end if (v55==(1 -0)) then v56=v3(v16,v19,(v19 + v54) -(1 + 0) );v19=v19 + v54 ;v55=2;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v58=0 -0 ;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v58==(3 + 0)) then v65=nil;while true do if (v59~=(1453 -(284 + 1168))) then else v64=v24();v65={};for v100=1,v64 do local v101=0 + 0 ;local v102;local v103;local v104;while true do if (v101==(422 -(369 + 52))) then v104=nil;while true do if (1~=v102) then else if (v103==(1 + 0)) then v104=v22()~=(0 + 0) ;elseif (v103==(803 -(229 + 572))) then v104=v25();elseif (v103~=3) then else v104=v26();end v65[v100]=v104;break;end if (v102==(0 + 0)) then local v118=1112 -(767 + 345) ;while true do if (v118~=(1 + 0)) then else v102=1;break;end if (0==v118) then v103=v22();v104=nil;v118=2 -1 ;end end end end break;end if (v101==(0 + 0)) then v102=1698 -(581 + 1117) ;v103=nil;v101=1;end end end v63[2 + 1 ]=v22();v59=5 -3 ;end if ((0 -0)==v59) then v60={};v61={};v62={};v63={v60,v61,nil,v62};v59=1;end if (v59==2) then for v105=1735 -(114 + 1620) ,v24() do local v106=0 -0 ;local v107;local v108;while true do if (v106==0) then v107=0;v108=nil;v106=1 + 0 ;end if (v106~=1) then else while true do if (v107==(0 + 0)) then v108=v22();if (v21(v108,1,1487 -(604 + 882) )~=0) then else local v120=0;local v121;local v122;local v123;local v124;while true do if ((1454 -(1076 + 376))==v120) then while true do if (v121~=(720 -(513 + 206))) then else local v130=0 + 0 ;local v131;while true do if (v130~=0) then else v131=0;while true do if (v131~=(89 -(8 + 80))) then else v121=2 + 0 ;break;end if (v131==0) then local v243=0;while true do if (v243==(0 + 0)) then v124={v23(),v23(),nil,nil};if (v122==(0 -0)) then local v301=0;local v302;while true do if (v301==0) then v302=0;while true do if (v302~=(0 + 0)) then else v124[2 + 1 ]=v23();v124[1 + 3 ]=v23();break;end end break;end end elseif (v122==(2 -1)) then v124[1 + 2 ]=v24();elseif (v122==2) then v124[2 + 1 ]=v24() -((7 -5)^(1541 -(647 + 878))) ;elseif (v122~=(537 -(490 + 44))) then else local v361=0 -0 ;while true do if (v361~=0) then else v124[186 -(84 + 99) ]=v24() -((1 + 1)^16) ;v124[4]=v23();break;end end end v243=1 -0 ;end if (v243==(1936 -(1392 + 543))) then v131=1876 -(385 + 1490) ;break;end end end end break;end end end if (v121~=(5 -3)) then else if (v21(v123,1,1 + 0 )==(2 -1)) then v124[296 -(229 + 65) ]=v65[v124[1947 -(1034 + 911) ]];end if (v21(v123,1976 -(126 + 1848) ,3 -1 )~=1) then else v124[10 -7 ]=v65[v124[587 -(384 + 200) ]];end v121=3;end if (0==v121) then local v132=477 -(415 + 62) ;local v133;while true do if ((0 -0)==v132) then v133=0 -0 ;while true do if (v133~=0) then else local v244=0;while true do if (v244~=(0 -0)) then else v122=v21(v108,2,1 + 2 );v123=v21(v108,7 -3 ,6);v244=1;end if ((1 -0)~=v244) then else v133=3 -2 ;break;end end end if (v133~=1) then else v121=1044 -(822 + 221) ;break;end end break;end end end if ((9 -6)==v121) then if (v21(v123,3,5 -2 )==1) then v124[6 -2 ]=v65[v124[251 -(232 + 15) ]];end v60[v105]=v124;break;end end break;end if (v120==(3 -2)) then local v126=0 + 0 ;while true do if (v126~=(0 + 0)) then else v123=nil;v124=nil;v126=1 + 0 ;end if (v126==(4 -3)) then v120=2;break;end end end if (v120==(0 -0)) then local v127=0 -0 ;while true do if (v127==1) then v120=1 + 0 ;break;end if (v127~=0) then else v121=0 + 0 ;v122=nil;v127=368 -(273 + 94) ;end end end end end break;end end break;end end end for v109=4 -3 ,v24() do v61[v109-1 ]=v29();end for v111=2 -1 ,v24() do v62[v111]=v24();end return v63;end end break;end if (v58~=(3 -1)) then else v63=nil;v64=nil;v58=1358 -(1185 + 170) ;end if (v58==(0 -0)) then v59=0 + 0 ;v60=nil;v58=1 -0 ;end if (v58==(1 + 0)) then v61=nil;v62=nil;v58=2 + 0 ;end end end v30=nil;v18=7;end if (1==v18) then v21=nil;function v21(v66,v67,v68)if v68 then local v71=(v66/((3 -1)^(v67-(134 -(83 + (1794 -(1205 + 539)))))))%((4 -2)^(((v68-((1 + 0) -0)) -(v67-(1 + 0))) + (2 -1))) ;return v71-(v71%(1 + 0)) ;else local v72=(6 -4)^(v67-1) ;return (((v66%(v72 + v72))>=v72) and (1 + 0 + 0)) or (23 -(7 + 16)) ;end end v22=nil;v18=2;end end end vv9(),...);end
