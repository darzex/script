--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v75=0;while true do if (v75==0) then v19=v0(v3(v30,1,1));return "";end end else local v76=0;local v77;while true do if (v76==0) then v77=v2(v0(v30,16));if v19 then local v99=0;local v100;while true do if (v99==0) then v100=v5(v77,v19);v19=nil;v99=1;end if (v99==1) then return v100;end end else return v77;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v78=(v31/((1318 -(657 + 659))^(v32-1)))%(((20 -12) -6)^(((v33-(1166 -((1786 -(1388 + 330)) + 1097))) -(v32-(1 + 0))) + (1543 -(1274 + 268)))) ;return v78-(v78%(1636 -(708 + 927))) ;else local v79=(1258 -(298 + 383)) -(302 + 275) ;local v80;while true do if (v79==(0 + 0)) then v80=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v80 + v80))>=v80) and ((471 + 131) -(24 + 577))) or ((650 -(229 + 421)) -0) ;end end end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(510 -((557 -351) + 304))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1 + 0 ;end if (v34==(2 -1)) then return v35;end end end local function v22()local v36=464 -(357 + 107) ;local v37;local v38;while true do if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (188 -((986 -(222 + 673)) + (301 -(196 + 10)))) );v18=v18 + 2 + 0 ;v36=3 -2 ;end if (v36==((1035 -(105 + 929)) + 0)) then return (v38 * (364 -108)) + v37 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + ((1352 -(1145 + 204)) -0) );v18=v18 + 4 + (1954 -(1189 + 765)) ;return (v42 * (16777901 -(577 + 108))) + (v41 * (116344 -50808)) + (v40 * (177 + 79)) + v39 ;end local function v24()local v43=(0 -0) + 0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(3 -2)) then v46=1 -0 ;v47=(v20(v45,(2 -1) + 0 + 0 ,105 -(79 + 6) ) * (((803 + 292) -(1003 + 90))^(6 + 26))) + v44 ;v43=1 + 1 ;end if ((3 -1)==v43) then v48=v20(v45,37 -16 ,69 -38 );v49=((v20(v45,(1881 -(1183 + 628)) -38 )==((402 + 276) -(17 + 660))) and  -(3 -2)) or (643 -(87 + 344 + 211)) ;v43=(757 + 706) -(1039 + 421) ;end if (v43==(1055 -(945 + 110))) then v44=v23();v45=v23();v43=448 -(172 + 275) ;end if (v43==(1902 -(188 + 920 + 791))) then if (v48==(0 + 0)) then if (v47==(0 -0)) then return v49 * (0 + 0) ;else v48=(991 -(671 + 319)) + 0 ;v46=0 -0 ;end elseif (v48==(1232 + 815)) then return ((v47==(555 -(216 + 339))) and (v49 * ((586 -(240 + 345))/((318 + 1452) -(911 + 859))))) or (v49 * NaN) ;end return v8(v49,v48-(4462 -3439) ) * (v46 + (v47/((3 -1)^(184 -(70 + 62))))) ;end end end local function v25(v50)local v51;if  not v50 then local v81=0;while true do if (v81==(0 + 0 + 0)) then v50=v23();if (v50==(0 + (0 -0))) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -(1599 -(1498 + 100)) );v18=v18 + v50 ;local v52={};for v66=1, #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=1166 -(532 + 634) ;local v54;local v55;local v56;local v57;local v58;local v59;while true do local v68=0;while true do if (v68==(1078 -(911 + 167))) then local v82=1327 -(638 + 689) ;while true do if (v82==(1 -0)) then v68=1;break;end if (v82~=(721 -(364 + 357))) then else if (v53==(1 + 0)) then local v105=98 -(80 + 18) ;local v106;while true do if (v105==(0 + 0)) then v106=0;while true do if (v106==1) then local v112=0 -0 ;while true do if (v112==1) then v106=2;break;end if (0==v112) then for v124=1 + 0 ,v58 do local v125=0;local v126;local v127;local v128;local v129;local v130;while true do if (v125==(1 + 0)) then v128=nil;v129=nil;v125=1440 -(1266 + 172) ;end if ((1420 -(210 + 1208))==v125) then v130=nil;while true do if (v126~=(1355 -(902 + 452))) then else v129=nil;v130=nil;v126=2 -0 ;end if (v126==2) then while true do if (v127~=(1812 -(561 + 1250))) then else v130=nil;while true do if ((192 -(83 + 108))==v128) then if (v129==(2 -1)) then v130=v21()~=(0 -0) ;elseif (v129==(1 + 1)) then v130=v24();elseif (v129==(6 -3)) then v130=v25();end v59[v124]=v130;break;end if (v128==0) then local v299=0 + 0 ;local v300;while true do if (v299==(0 + 0)) then v300=0;while true do if (v300~=(1 + 0)) then else v128=4 -3 ;break;end if (v300==(0 + 0)) then local v359=443 -(221 + 222) ;local v360;while true do if (v359~=0) then else v360=0;while true do if (v360~=0) then else local v378=85 -(61 + 24) ;while true do if (v378==(0 -0)) then v129=v21();v130=nil;v378=1 + 0 ;end if (v378==(935 -(607 + 327))) then v360=1257 -(946 + 310) ;break;end end end if (v360==(282 -(164 + 117))) then v300=1;break;end end break;end end end end break;end end end end break;end if (v127==(0 -0)) then v128=0 -0 ;v129=nil;v127=1;end end break;end if (v126~=(493 -(121 + 372))) then else local v235=0 + 0 ;while true do if (v235~=0) then else v127=0 -0 ;v128=nil;v235=1 -0 ;end if (v235~=(1 + 0)) then else v126=1 -0 ;break;end end end end break;end if (v125==(0 -0)) then v126=482 -(258 + 224) ;v127=nil;v125=1 + 0 ;end end end v57[1358 -(630 + 725) ]=v21();v112=1 + 0 ;end end end if ((1697 -(774 + 921))==v106) then v53=2 + 0 ;break;end if (v106~=0) then else local v113=0 + 0 ;while true do if (v113==(0 + 0)) then v58=v23();v59={};v113=986 -(535 + 450) ;end if (v113==1) then v106=1 + 0 ;break;end end end end break;end end end if (v53==(0 -0)) then local v107=0 + 0 ;while true do if (v107~=(3 -1)) then else v53=1 -0 ;break;end if ((2 -1)==v107) then v56={};v57={v54,v55,nil,v56};v107=2;end if (v107==(0 + 0)) then v54={};v55={};v107=3 -2 ;end end end v82=525 -(490 + 34) ;end end end if (v68==(1 -0)) then if (v53==2) then local v93=1717 -(646 + 1071) ;local v94;while true do if ((0 + 0)~=v93) then else v94=0 -0 ;while true do if (v94==1) then for v110=1 + 0 ,v23() do v56[v110]=v23();end return v57;end if (v94==(0 + 0)) then local v108=0 -0 ;while true do if (v108==(3 -2)) then v94=19 -(10 + 8) ;break;end if (v108==0) then for v116=1299 -(1151 + 147) ,v23() do local v117=536 -(411 + 125) ;local v118;local v119;local v120;while true do if (v117~=(1467 -(1090 + 377))) then else v118=1995 -(961 + 1034) ;v119=nil;v117=1;end if ((1267 -(623 + 643))==v117) then v120=nil;while true do if (v118~=(1341 -(984 + 357))) then else v119=0;v120=nil;v118=1 + 0 ;end if (v118==(2 -1)) then while true do if (v119==(0 -0)) then v120=v21();if (v20(v120,1084 -(453 + 630) ,2 -1 )==0) then local v253=0 -0 ;local v254;local v255;local v256;while true do if (v253~=(0 -0)) then else local v287=0;while true do if (v287==(2 -1)) then v253=1;break;end if (v287~=(815 -(433 + 382))) then else v254=v20(v120,2,683 -(597 + 83) );v255=v20(v120,2 + 2 ,15 -9 );v287=1 -0 ;end end end if (v253==(189 -(48 + 139))) then if (v20(v255,1,1)~=(3 -2)) then else v256[7 -5 ]=v59[v256[4 -2 ]];end if (v20(v255,3 -1 ,110 -(71 + 37) )==(1 + 0)) then v256[2 + 1 ]=v59[v256[3]];end v253=1049 -(537 + 509) ;end if (v253==(325 -(203 + 121))) then local v288=0 -0 ;local v289;while true do if (v288==(1618 -(1120 + 498))) then v289=0 + 0 ;while true do if (v289~=(0 -0)) then else v256={v22(),v22(),nil,nil};if (v254==(952 -(853 + 99))) then local v363=0 -0 ;while true do if (v363==(0 + 0)) then v256[1675 -(719 + 953) ]=v22();v256[1768 -(325 + 1439) ]=v22();break;end end elseif (v254==(919 -(354 + 564))) then v256[8 -5 ]=v23();elseif (v254==(2 + 0)) then v256[505 -(121 + 381) ]=v23() -(2^16) ;elseif (v254~=(1096 -(877 + 216))) then else local v379=74 -(52 + 22) ;local v380;local v381;while true do if (v379==(0 + 0)) then v380=691 -(629 + 62) ;v381=nil;v379=1;end if (v379~=(2 -1)) then else while true do if (v380~=0) then else v381=0 + 0 ;while true do if (v381~=(0 -0)) then else v256[3]=v23() -((1 + 1)^(10 + 6)) ;v256[7 -3 ]=v22();break;end end break;end end break;end end end v289=1 + 0 ;end if (v289==(1 -0)) then v253=2;break;end end break;end end end if (v253==(13 -10)) then if (v20(v255,3,3)~=(1 + 0)) then else v256[13 -9 ]=v59[v256[856 -(339 + 513) ]];end v54[v116]=v256;break;end end end break;end end break;end end break;end end end for v121=1 + 0 ,v23() do v55[v121-1 ]=v28();end v108=1;end end end end break;end end end break;end end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==2) then v74=nil;function v74()local v83=v63;local v84=v64;local v85=v65;local v86=v27;local v87={};local v88={};local v89={};for v95=1576 -(277 + 1299) ,v73 do if ((1954>=(791 + 533)) and (v95>=v85)) then v87[v95-v85 ]=v72[v95 + ((1 + 1) -1) ];else v89[v95]=v72[v95 + ((2595 -(1664 + 257)) -(377 + 296)) ];end end local v90=(v73-v85) + 1 ;local v91;local v92;while true do local v96=0 -0 ;local v97;while true do if ((v96==(0 + 0)) or ((2695 -(447 + 697))==((425 -153) -119))) then v97=0 -0 ;while true do if ((1352<=1510) and (v97==(554 -(205 + 349)))) then local v109=1437 -(1163 + 274) ;while true do if ((v109==((282 + 1436) -(511 + 1206))) or (3392>(2934 + 686))) then v97=2 -1 ;break;end if (((3975 -(255 + 773))<3856) and (v109==(0 -0))) then v91=v83[v70];v92=v91[2 -1 ];v109=1 + 0 ;end end end if (((7011 -4527)<(1266 + 2591)) and (v97==1)) then if ((3844==3844) and (v92<=(20 + 1))) then if (((2286 -(263 + 281))<(4370 -(425 + 233))) and (v92<=(214 -(132 + 72)))) then if ((v92<=(11 -7)) or (892>=(3837 -(261 + 407)))) then if ((v92<=((109 + 399) -(164 + 343))) or ((5672 -(72 + 1026))<=((1767 -(715 + 94)) -(138 + 255)))) then if ((v92>(0 + 0)) or (916<=(314 + 196))) then v89[v91[694 -((2252 -(1634 + 75)) + 149) ]][v91[3]]=v91[603 -(148 + 451) ];else local v133=(0 + 0) -0 ;local v134;local v135;while true do if (((952 -236)<=2808) and (v133==(0 -0))) then v134=66 -(49 + 17) ;v135=nil;v133=2 -1 ;end if ((v133==((1242 -(573 + 666)) -2)) or (2117>=(356 + 2379))) then while true do if (((6559 -(337 + 1309))>(2446 -(652 + 166 + 574))) and (v134==(0 + 0))) then v135=v91[2];v89[v135](v13(v89,v135 + 1 + 0 ,v91[5 -2 ]));break;end end break;end end end elseif ((v92<=(4 -2)) or ((7059 -3495)>(4945 -(365 + 110)))) then if ((((655 + 749) -(306 + 804))<=(2408 -(935 + 854))) and (v89[v91[2 -0 ]]==v89[v91[(8 -4) + 0 ]])) then v70=v70 + 1 ;else v70=v91[13 -10 ];end elseif (((1298 + 288)<=(4625 -((628 -444) + 106))) and (v92==(3 -0))) then v89[v91[2 + 0 ]]=v61[v91[2 + 1 ]];else local v187=0 -0 ;local v188;local v189;local v190;local v191;while true do if (((1605 -(1432 -885))==(668 + 390)) and (v187==(0 -0))) then v188=1019 -(1005 + 14) ;v189=nil;v187=140 -(99 + 40) ;end if (((3406 -2045)<(1622 + 1231)) and (v187==2)) then while true do if ((v188==(0 -0)) or ((4738 -2075)<(1407 + 444))) then local v291=0 + 0 ;while true do if ((v291==(1 + (0 -0))) or ((3539 -(38 + 17))>(24208 -19288))) then v188=1;break;end if ((1398==(381 + (2854 -(781 + 1056)))) and (v291==0)) then v189=v91[2];v190=v89[v189];v291=1837 -(276 + 456 + 1104) ;end end end if ((3109>73) and (v188==1)) then v191=v91[1656 -(812 + 841) ];for v301=3 -2 ,v191 do v190[v301]=v89[v189 + v301 ];end break;end end break;end if ((v187==(2 -1)) or (((32665 -22784) -7446)<((2352 -(531 + 35)) -(121 + 74)))) then v190=nil;v191=nil;v187=1 + 1 ;end end end elseif ((v92<=(27 -20)) or ((2241 -((2233 -(1014 + 707)) + 354))>(3197 -(1006 + 52)))) then if ((v92<=(7 -2)) or (937>=(139 + 1166 + 108))) then v89[v91[2]]=v89[v91[6 -3 ]] + v91[1 + 3 ] ;elseif ((4446==(11561 -7115)) and (v92==(1026 -(687 + 333)))) then v89[v91[2 + 0 ]]=v89[v91[3 + 0 ]][v91[313 -((1028 -(735 + 76)) + (1285 -(1176 + 17))) ]];else v89[v91[2]]=v89[v91[(14 -11) + (0 -0) ]];end elseif ((v92<=8) or ((1165 + 3817)<=(3332 -(83 + (438 -310))))) then local v137=0;local v138;local v139;local v140;local v141;local v142;while true do if ((2728==((11345 -4523) -4094)) and (v137==1)) then local v236=0 -0 ;while true do if (((0 -0)==v236) or ((3714 -(121 + 93 + 13))==(5147 -(358 + 85)))) then v140=nil;v141=nil;v236=3 -2 ;end if (((5608 -3994)<=(3693 -(1186 + 133))) and (v236==(408 -(178 + 229)))) then v137=1 + 1 ;break;end end end if ((v137==(1808 -(770 + 1038))) or (((24893 -19618) -(499 + 1430))>=3916)) then local v237=0;while true do if ((v237==(1163 -(364 + 799))) or (((8324 -3877) -(954 + 419))<((879 + 583) -699))) then v138=0 + 0 ;v139=nil;v237=3 -2 ;end if ((1356<=(8069 -3597)) and (v237==(1 -0))) then v137=1720 -(1622 + 97) ;break;end end end if ((v137==(1678 -(1390 + 286))) or ((2577 -(292 + 225))>(931 + 4053))) then v142=nil;while true do if ((1580>=937) and (v138==(1082 -(613 + (1718 -(1096 + 153)))))) then local v266=1593 -(474 + 1119) ;local v267;while true do if ((v266==(0 -0)) or ((3111 -(2873 -(835 + 1061)))>(2251 + 1971))) then v267=0;while true do if ((v267==(1341 -(1339 + 1))) or ((1789 + 122)<(59 + 49))) then v138=1 + 0 ;break;end if ((v267==(0 + 0)) or ((6232 -3811)>=3233)) then local v335=0 + (0 -0) ;while true do if ((v335==(1 + 0)) or (((20790 -12062) -5065)<=(3739 -(47 + 675)))) then v267=1 + (0 -0) ;break;end if (((0 -0)==v335) or ((1426 -(185 + 44))>=((9533 -5968) -(480 + 389)))) then v139=v91[115 -(89 + 24) ];v140,v141=v86(v89[v139](v13(v89,v139 + 1 + 0 ,v91[3 -0 ])));v335=(2067 -(243 + 160)) -(654 + 1009) ;end end end end break;end end end if ((1==v138) or ((18463 -13873)<(1678 -(105 + 519)))) then local v268=0;local v269;while true do if (((8247 -4011)<((4694 + 13955) -13972)) and (v268==(0 + 0))) then v269=0;while true do if (((1217 -(1090 + (232 -106)))==v269) or ((3255 -(43 + 755))==(9268 -6759))) then v138=1954 -(1573 + 379) ;break;end if ((v269==(0 -0)) or ((5108 -(291 + 215))<=(816 + 553))) then v71=(v141 + v139) -(1 + 0) ;v142=93 -(14 + 79) ;v269=1 -0 ;end end break;end end end if (((3401 -(163 + 769))<=(6334 -1992)) and (v138==(2 + 0))) then for v280=v139,v71 do local v281=(0 + 0) -(0 -0) ;while true do if (((2395 -(71 + 1059))<3336) and ((0 -0)==v281)) then v142=v142 + 1 ;v89[v280]=v140[v142];break;end end end break;end end break;end end elseif ((((9159 -(1085 + 56)) -4641)<((9593 -7316) + 2259)) and (v92>(34 -25))) then v70=v91[5 -2 ];else local v197=(0 + 0) -0 ;local v198;while true do if ((v197==(0 -(0 -0))) or ((272 + 464)<=(415 + 130))) then v198=v91[2 -(1435 -(628 + 807)) ];v89[v198]=v89[v198](v13(v89,v198 + 1 + 0 ,v91[13 -10 ]));break;end end end elseif ((v92<=(2 + 13)) or ((686 + 1182)>(1668 + 1586))) then if ((v92<=12) or (((1959 + 2357) -(397 + 276))==(27 + 450))) then if (((854 + (3226 -1207))<=(1805 + 2557)) and (v92==(1 + 10))) then v89[v91[2 + 0 ]][v91[5 -2 ]]=v89[v91[1 + 3 ]];else local v145=0 + 0 ;local v146;local v147;local v148;while true do if (((12419 -8947)>=(404 + 538)) and (v145==(1 -0))) then v148=nil;while true do if ((4907>1941) and (v146==0)) then v147=0 + 0 ;v148=nil;v146=1;end if ((v146==(1 -(37 -(13 + 24)))) or ((664 + (9656 -5898))<551)) then while true do if ((v147==(920 -(146 + 156 + 618))) or ((4576 -(992 + 906))==((710 + 3535) -2592))) then v148=v91[90 -(82 + 6) ];v89[v148](v13(v89,v148 + (648 -(229 + (1201 -783))) ,v71));break;end end break;end end break;end if ((1096<=4629) and (v145==(1196 -((1126 -(144 + 834)) + (1864 -(24 + 792)))))) then v146=0 + 0 ;v147=nil;v145=1966 -(1104 + 861) ;end end end elseif (((4818 -(722 + 234))>1310) and (v92<=(807 -(81 + 27 + 686)))) then local v149=0 -0 ;local v150;local v151;local v152;local v153;local v154;while true do if ((v149==(1 + 0 + 1)) or (4083<((2477 + 2751) -(226 + 1531)))) then v154=nil;while true do if (((3980 -(472 + 1135))<(7319 -3564)) and (v150==(719 -(330 + 387)))) then while true do if ((v151==(452 -((405 -132) + 177))) or (((1175 -(307 + 412)) + 287)>((1564 + 2330) -2784))) then for v319=1 + 0 ,v91[1879 -(1058 + (1148 -(101 + 230))) ] do local v320=0 + 0 ;local v321;local v322;while true do if (((1385 -(2209 -1452))<(3998 -(770 + 229))) and (v320==1)) then while true do if ((v321==((27 + 1771) -(897 + 900))) or ((56 + 217)>=(2174 -(390 + 472)))) then if ((v322[1 -0 ]==(7 + 0)) or ((485 + 4118)<(1768 -(370 + 1133)))) then v154[v319-(1 -0) ]={v89,v322[7 -4 ]};else v154[v319-(1 + (0 -0)) ]={v61,v322[3]};end v88[ #v88 + 1 ]=v154;break;end if (((1627 -(849 + (1982 -(1243 + 48))))==((333 -(22 + 39)) -185)) and (v321==(1510 -(1341 + 169)))) then v70=v70 + 1 + 0 ;v322=v83[v70];v321=1;end end break;end if ((v320==0) or (4759<=(8772 -5385))) then v321=(388 -(315 + 73)) -0 ;v322=nil;v320=1 + 0 ;end end end v89[v91[4 -2 ]]=v29(v152,v153,v62);break;end if (((1555 + 2959)==(16331 -(25786 -13969))) and (v151==0)) then local v306=0 -0 ;while true do if (((1743 + 2429)>=(1338 -(292 + 173))) and (v306==(0 + 0))) then local v336=0 + 0 ;while true do if ((v336==(14 -(9 + 5))) or ((7624 -4949)<(881 + 390))) then v152=v84[v91[155 -(89 + 63) ]];v153=nil;v336=1 + 0 ;end if ((v336==(1 + 0)) or ((5207 -(465 + 1465))<(3544 -(451 + 1450)))) then v306=1427 -((1061 -(39 + 44)) + 448) ;break;end end end if (((1856 -(1694 + 161))==v306) or ((4016 -(18 + 2))==(2016 -(245 + 65)))) then v151=(2 -1) + 0 ;break;end end end if (((2103 -(467 + 320 + 129))<(3490 -(885 + 265 + 449))) and (v151==(1 + 0))) then local v307=0;while true do if (((186 + (89 -70))==(173 + 32)) and (v307==(0 + 0))) then v154={};v153=v10({},{__index=function(v339,v340)local v341=0 -0 ;local v342;local v343;while true do if (((16750 -11916)>(4180 -(917 + (1382 -(52 + 1322))))) and ((0 -0)==v341)) then v342=51 -(26 + 25) ;v343=nil;v341=1 + 0 ;end if (((2771 -(8 + 338))<=(1947 + 2393)) and (v341==(1 + 0))) then while true do if (((6977 -3515)==(2959 + (736 -(122 + 111)))) and (v342==0)) then local v375=0 -0 ;local v376;while true do if ((v375==(1451 -(332 + 1119))) or (3847>(3226 + 745))) then v376=0 -(389 -(294 + 95)) ;while true do if ((v376==((0 + 0) -0)) or ((1 + (3 -1))>2835)) then local v385=1728 -((2886 -(967 + 475)) + 284) ;while true do if ((0==v385) or (1820<=(1717 -784))) then v343=v154[v340];return v343[208 -(37 + 170) ][v343[2]];end end end end break;end end end end break;end end end,__newindex=function(v344,v345,v346)local v347=0 + 0 ;local v348;while true do if (((3192 -(1137 + 13))>891) and (v347==0)) then v348=v154[v345];v348[1 + 0 ][v348[2 + 0 ]]=v346;break;end end end});v307=3 -2 ;end if ((2778>=(3412 -(1169 + 651))) and ((1 -0)==v307)) then v151=2;break;end end end end break;end if ((((410 + 3570) -(1627 + 12 + 6))<=3718) and (v150==0)) then local v270=0 + 0 ;while true do if ((v270==(0 + 0)) or ((10278 -6482)==((1692 + 1214) -1643))) then v151=0 + 0 ;v152=nil;v270=1 + 0 ;end if (((2542 -(508 + 370))>=(3415 -(427 + (2655 -(819 + 490))))) and (v270==(2 -(1 + 0)))) then v150=1;break;end end end if ((v150==(1 -0)) or (2426>=(3394 + 888))) then local v271=0 -0 ;while true do if ((v271==(2 -1)) or ((526 -(263 + 70))>=(231 + 654))) then v150=317 -((228 -94) + 181) ;break;end if (((2991 + 141)<=(2923 + 1807)) and (v271==(0 + 0))) then v153=nil;v154=nil;v271=2 -1 ;end end end end break;end if ((v149==(595 -(399 + 195))) or ((9982 -6223)<=(3265 -((1930 -1357) + 123)))) then v152=nil;v153=nil;v149=1900 -((6464 -4829) + 263) ;end if (((135 + 803)==(1713 -(556 + 219))) and (v149==(0 + 0))) then v150=721 -(385 + 336) ;v151=nil;v149=1 -0 ;end end elseif (((3455 -(211 + 21 + 126))<=(9470 -5800)) and (v92>14)) then v89[v91[1 + 1 ]]=v89[v91[(12 -9) -(755 -(482 + 273)) ]]/v89[v91[4 + 0 ]] ;elseif ((v91[2]==v89[v91[2 + 2 ]]) or (1628<(1005 -528))) then v70=v70 + 1 ;else v70=v91[1971 -(38 + 1930) ];end elseif ((v92<=((853 + 897) -(1410 + 322))) or (((2231 -(192 + 1433)) + 2699)>(5008 -(1295 + 390)))) then if (((2466 -(777 + (1263 -514)))<(4399 -(79 + 51))) and (v92<=(16 + 0))) then local v155=0 -(0 -0) ;local v156;local v157;while true do if ((v155==(1802 -(830 + 972))) or ((5663 -((515 -321) + (1434 -(94 + 831))))==((3419 + 672) -(75 + 425)))) then local v238=0 + 0 ;while true do if (((6248 -2892)>=(2216 + 646)) and (v238==1)) then v155=1 + 0 ;break;end if ((v238==(0 + 0)) or ((1478 + 3056)==(4082 -(881 + 538)))) then v156=v91[2 + 0 ];v157={};v238=425 -(56 + 368) ;end end end if (((736 -(259 + 476))==v155) or ((3249 -(716 + 755))<(1075 + 225 + 263))) then for v243=1, #v88 do local v244=0 -0 ;local v245;local v246;local v247;while true do if (((8801 -(6658 -(50 + 74)))>=(844 -(100 + 396))) and (v244==(521 -(293 + 227)))) then v247=nil;while true do if ((v245==(0 + 0)) or ((748 + 23 + 102)>=(4173 -(940 + 608)))) then local v323=1106 -((1495 -973) + 584) ;while true do if ((v323==((0 -0) + 0)) or ((7910 -4265)<(5730 -2628))) then v246=0 -0 ;v247=nil;v323=1 + 0 ;end if (((1078 -514)<=(1340 + 787)) and (v323==((212 -(115 + 96)) + 0))) then v245=1904 -(1073 + 830) ;break;end end end if ((v245==(459 -(373 + 85))) or (3619==(3091 -(516 + 383)))) then while true do if (((0 -0)==v246) or ((139 + 1339)>=(8187 -5377))) then v247=v88[v243];for v352=0 + 0 , #v247 do local v353=0 + (259 -(208 + 51)) ;local v354;local v355;local v356;local v357;local v358;while true do if (((2309 -(739 + 346))<=((17463 -13920) -1847)) and (v353==(1 + 1))) then v358=nil;while true do if ((v354==2) or ((5297 -(95 + 275))<(5724 -(292 + 740)))) then while true do if (((0 + 0)==v355) or ((13543 -(25329 -15741))<=(4395 -(251 + 1263)))) then local v382=(0 -0) + (1857 -(1551 + 306)) ;local v383;while true do if ((v382==0) or ((171 + 1462)<(117 + 14 + 29))) then v383=0 + 0 ;while true do if ((0==v383) or ((2243 + 193)==(2924 -(11 + 157)))) then local v390=264 -(213 + 51) ;while true do if ((1==v390) or ((8489 -4688)==1254)) then v383=2 -1 ;break;end if ((0==v390) or ((1399 + 62 + 1573)<=(1322 + 1688))) then v356=v247[v352];v357=v356[600 -(328 + 271) ];v390=3 -(2 + 0) ;end end end if ((v383==(1 + 0)) or ((5961 -4699)>(1321 + (7988 -4421)))) then v355=1 -0 ;break;end end break;end end end if (((329 -(111 + 217))==v355) or ((3494 -(1274 + 503))>(1591 + 1287))) then v358=v356[2 + 0 ];if (((13367 -10483)>=(849 -447)) and (v357==v89) and (v358>=v156)) then local v386=231 -(86 + 145) ;local v387;local v388;while true do if (((16966 -13095)==(5368 -(1426 + 71))) and (v386==(1904 -(982 + 814 + 107)))) then while true do if ((v387==(0 + 0)) or ((4729 -(246 + 260))<=(1999 + 1723))) then v388=934 -(655 + 279) ;while true do if ((v388==(0 + 0)) or ((4113 -(147 + 67))<=(777 + 459))) then v157[v358]=v357[v358];v356[1 + 0 ]=v157;break;end end break;end end break;end if (((66 -34)<(2077 -(167 + 308))) and (v386==(0 + 0))) then v387=650 -(80 + 570) ;v388=nil;v386=1 + 0 + 0 ;end end end break;end end break;end if ((v354==(1 + 0)) or ((9303 -6744)<35)) then v357=nil;v358=nil;v354=1 + 1 ;end if ((v354==(0 -0)) or ((3370 -(286 + 992))>=(5903 -(722 + 658)))) then v355=0 + 0 ;v356=nil;v354=116 -(97 + 18) ;end end break;end if (((5720 -(1528 + 118 + 27))<(4206 -(67 + 66))) and (v353==(1 + 0))) then v356=nil;v357=nil;v353=1012 -(364 + 646) ;end if ((3640>(7917 -5331)) and (((655 -(116 + 62)) -(407 + 70))==v353)) then v354=0;v355=nil;v353=1;end end end break;end end break;end end break;end if ((507<=(867 + 2637)) and (v244==0)) then v245=0;v246=nil;v244=1;end end end break;end end elseif (((1695 -(225 + 854))<(686 + 947)) and (v92==(66 -49))) then v89[v91[3 -1 ]]=v89[v91[1085 -(796 + 286) ]] -v89[v91[11 -7 ]] ;else local v201=42 -(41 + 1) ;local v202;local v203;local v204;while true do if ((v201==(0 -0)) or ((5984 -(836 + 328 + 115))<=3026)) then v202=0 -(303 -(92 + 211)) ;v203=nil;v201=1 + (0 -0) ;end if ((v201==(1183 -((1075 -(191 + 136)) + (695 -261)))) or ((4465 -(797 + 214))>(10046 -6375))) then v204=nil;while true do if (((1030 + 2330)<=(16755 -13153)) and (v202==(1 + 0))) then for v308=v203 + 1 + 0 ,v91[2 + 1 ] do v7(v204,v89[v308]);end break;end if (((2989 -(320 + 1073))>(1604 -814)) and (v202==(345 -(105 + 240)))) then local v293=0 + 0 ;while true do if (((726 + 211)<(4008 -(1565 + 188))) and ((0 -0)==v293)) then v203=v91[2];v204=v89[v203];v293=1170 -(207 + 962) ;end if ((v293==(1 -0)) or ((3893 -940)>=(4132 -(32 + 283)))) then v202=1 + 0 ;break;end end end end break;end end end elseif ((v92<=(19 + 0)) or ((766 + 2045)<=(970 + 1249))) then local v158=0 -0 ;local v159;local v160;local v161;while true do if ((v158==(0 -0)) or (((4606 -(1113 + 39)) -(1327 + 593))>(4666 -(512 + 566)))) then v159=873 -(718 + 155) ;v160=nil;v158=2 -1 ;end if (((1 + 0)==v158) or ((1713 -(635 + 950))>=(4518 -(3411 -(579 + 115))))) then v161=nil;while true do if (((1418 -(932 + (1203 -(66 + 651))))==v159) or ((31 + 516)>=(4368 -2643))) then local v273=1858 -(834 + 1024) ;while true do if (((789 + 420 + 1367)==2576) and (v273==1)) then v159=1148 -(876 + 271) ;break;end if ((((6575 -(17 + 124)) -3095)==(4577 -(54 + (1400 -(7 + 209))))) and ((0 -0)==v273)) then v160=36 -(15 + 21) ;v161=nil;v273=1;end end end if ((v159==(1 + 0 + 0)) or (3878<(3360 -1970))) then while true do if (((8464 -4749)>=((53425 -40832) -8945)) and ((0 + 0)==v160)) then v161=v91[(16 -(6 + 5)) -3 ];v89[v161](v89[v161 + ((1 + 0) -0) ]);break;end end break;end end break;end end elseif ((v92>20) or ((735 + 859)==(407 + 434))) then if (v89[v91[2]] or ((19647 -15396)>4429)) then v70=v70 + (408 -(80 + 327)) ;else v70=v91[5 -2 ];end else local v205=0 + 0 ;local v206;local v207;local v208;local v209;while true do if ((v205==(2 -0)) or ((1346 -(82 + 778))>2874)) then while true do if (((14133 -11214)==(4358 -(464 + 748 + 227))) and (v206==(1 + 0))) then v209=nil;while true do if ((v207==((3401 -2392) -(106 + 902))) or ((3468 -(317 + 1566))>(4874 -(329 + 1534)))) then v89[v208 + (2 -1) ]=v209;v89[v208]=v209[v91[5 -1 ]];break;end if (((1121 -678)<=((18451 -(1351 + 588)) -11542)) and (v207==(1433 -(142 + 609 + 682)))) then local v331=0 + 0 ;local v332;while true do if ((v331==(0 -(459 -(410 + 49)))) or ((1479 + 199)==3302)) then v332=0 + 0 + 0 ;while true do if (((0 -0)==v332) or ((5391 -(280 + 299))<2008)) then v208=v91[(2 + 4) -4 ];v209=v89[v91[30 -(23 + (1977 -(1429 + 544))) ]];v332=3 -2 ;end if ((1==v332) or ((2319 -1298)>=(2602 -(3955 -2433)))) then v207=1;break;end end break;end end end end break;end if (((8504 -5180)>(926 -(537 + 378))) and (v206==((3080 -(108 + 1727)) -(203 + (2512 -(1376 + 94)))))) then local v294=0 + 0 ;while true do if ((2119<((1505 + 2424) -(114 + 1414))) and (((3025 -(392 + 1176)) -(580 + 877))==v294)) then v207=0 -0 ;v208=nil;v294=1;end if ((452<(894 + 1082)) and (v294==1)) then v206=3 -2 ;break;end end end end break;end if ((v205==(1735 -(962 + 316 + 457))) or (1012<(927 -(354 + 150)))) then v206=0 -0 ;v207=nil;v205=1 + 0 ;end if ((v205==(1 -0)) or ((2451 -(247 + 13))>2581)) then v208=nil;v209=nil;v205=1402 -(139 + 1261) ;end end end elseif (((3165 + 949)>483) and (v92<=(44 -(8 + 4)))) then if ((v92<=(1984 -(1708 + 250))) or ((2688 -((1935 -(100 + 1713)) + 13))>(8219 -(4186 -(76 + 415))))) then if (((2925 -(98 + 164))==((5720 -(871 + 389)) -(794 + 1003))) and (v92<=(17 + 6))) then if ((v92>(1396 -((661 -(243 + 67)) + 193 + 830))) or ((1382 + 236 + 2292)==(9552 -6952))) then local v162=v91[2 -0 ];local v163=v91[4 + (0 -0) ];local v164=v162 + 1 + 1 ;local v165={v89[v162](v89[v162 + 1 + 0 ],v89[v164])};for v181=1877 -(411 + 1465) ,v163 do v89[v164 + v181 ]=v165[v181];end local v166=v165[1];if (v166 or (3249>=(5146 -(79 + 923)))) then local v210=1753 -(1569 + 184) ;local v211;local v212;while true do if ((2679>(1269 + 355)) and ((1 -0)==v210)) then while true do if ((((13884 -10934) -(334 + 1319))<(1819 + 978)) and ((0 + 0)==v211)) then v212=0 -0 ;while true do if ((v212==(737 -(10 + 727))) or ((1670 + 707 + 586)>(6487 -(673 + 911)))) then v89[v164]=v166;v70=v91[(5546 -3640) -((2022 -(151 + 1720)) + 1752) ];break;end end break;end end break;end if (((0 -(1489 -(265 + 1224)))==v210) or ((1005 + 1532)<=(1787 -(962 + 365)))) then v211=0 -0 ;v212=nil;v210=4 -3 ;end end else v70=v70 + (1 -0) ;end else v89[v91[4 -2 ]]={};end elseif ((v92<=24) or ((2427 -1505)<(91 + 44))) then if (((2089 + (2949 -1688))>=2489) and  not v89[v91[5 -3 ]]) then v70=v70 + ((2 + 1) -2) ;else v70=v91[(381 + 286) -(188 + 476) ];end elseif (((2300 -(265 + 421))>(641 -402)) and (v92>(13 + 12))) then v89[v91[2]]=v89[v91[2 + 1 ]] * v89[v91[4]] ;else do return;end end elseif ((v92<=(2 + 27)) or ((4238 -(167 + 89))<(4392 -1727))) then if (((6646 -(4746 -(321 + 59)))==(1183 + 1097)) and (v92<=(1239 -(203 + 1009)))) then local v168=0 -0 ;local v169;local v170;local v171;while true do if (((1487 + 1603)>(299 + 1911)) and (v168==0)) then local v239=0;while true do if ((v239==(0 -0)) or (4089<=2483)) then v169=v91[1 + 1 ];v170={v89[v169](v89[v169 + ((2712 -1943) -(602 + 166)) ])};v239=1 + 0 ;end if (((1019 -(786 + (1670 -(901 + 546))))<4450) and (v239==1)) then v168=1;break;end end end if ((v168==1) or ((9590 -(569 + 4929))<1656)) then v171=0 + 0 + 0 ;for v249=v169,v91[2 + 2 ] do local v250=965 -(62 + 903) ;while true do if (((340 -(14 + 22))<(9697 -7393)) and (v250==(0 + 0))) then v171=v171 + 1 ;v89[v249]=v170[v171];break;end end end break;end end elseif (((11669 -9145)>(1980 -(396 + 176))) and (v92==28)) then local v215=0 + 0 ;local v216;while true do if ((v215==(0 -0)) or (4491<2275)) then v216=v91[2 + 0 ];v89[v216]=v89[v216]();break;end end else for v240=v91[1601 -(160 + 1439) ],v91[5 -2 ] do v89[v240]=nil;end end elseif (((1422 -610)==((405 -226) + 633)) and (v92<=30)) then if ((v91[2]<v89[v91[4]]) or (2174<=(770 -(33 + 230)))) then v70=v70 + (3 -2) ;else v70=v91[3 + 0 ];end elseif ((v92>(190 -(19 + 140))) or (3657==(5471 -2027))) then local v218=0;local v219;local v220;while true do if (((2182 + 2145)>=((82 -(5 + 52)) + 114)) and (v218==(0 + 0))) then v219=0;v220=nil;v218=1805 -(442 + 1362) ;end if (((9385 -5725)<=4169) and (v218==(241 -(108 + (306 -174))))) then while true do if ((v219==((0 -0) -0)) or ((3843 -(624 + 137))>=((12456 -(353 + 1242)) -6136))) then v220=v91[2];v89[v220]=v89[v220](v89[v220 + (1 -0) ]);break;end end break;end end else v62[v91[8 -5 ]]=v89[v91[7 -5 ]];end elseif (((3321 -(217 + (2259 -1651)))>(2744 -1741)) and (v92<=(1769 -((3172 -(883 + 809)) + 251)))) then if (((3556 -(763 + 122))==(7211 -4540)) and (v92<=(47 -12))) then if (((3464 -(1591 + 374))<(5988 -(801 + 655))) and (v92<=(945 -(52 + 860)))) then if (((7822 -4817)>=(1268 + 794)) and (v89[v91[2]]<v89[v91[4]])) then v70=v70 + 1 + 0 ;else v70=v91[3];end elseif ((v92>(1470 -(466 + 970))) or ((2257 + 2203)<(872 -272))) then v89[v91[727 -(216 + 484 + 21 + 4) ]]();else v89[v91[2]]=v89[v91[434 -(307 + 124) ]]/v91[2 + 2 ] ;end elseif ((v92<=((1376 -(742 + 611)) + (36 -23))) or ((2392 -(13 + 1))>(1688 + 2082))) then v89[v91[6 -4 ]]=v62[v91[3]];elseif ((v92>(11 + (75 -49))) or (353>(2322 + 2157))) then v89[v91[5 -(7 -4) ]]=v91[3];elseif (((4170 -2013)==((3947 -(735 + 914)) -(125 + 16))) and (v89[v91[1 + 1 ]]==v91[4])) then v70=v70 + 1 + 0 ;else v70=v91[3];end elseif ((((11691 -(106 + 839)) -6234)==(758 + 3754)) and (v92<=41)) then if ((v92<=(450 -(267 + 144))) or (1570<1526)) then local v174=0 -0 ;local v175;local v176;local v177;local v178;local v179;while true do if (((2359 -(533 + 214))<=(8500 -6054)) and ((1 -0)==v174)) then v177=nil;v178=nil;v174=2 + 0 ;end if (((14 + 69)<((5493 -4171) -(762 + 29))) and ((117 -(7 + 108))==v174)) then v179=nil;while true do if (((4997 -(752 + 91))==(2864 + 1185 + 105)) and (1==v175)) then v71=(v178 + v176) -(1080 -(816 + (1853 -(709 + 881)))) ;v179=1182 -(200 + 982) ;v175=2 + 0 ;end if (((2978 -(601 + 199))<(5347 -(80 + 352))) and (v175==(6 -(8 -4)))) then for v284=v176,v71 do local v285=0;local v286;while true do if (((3457 + 377)<4189) and (v285==((0 + 0) -(1571 -(250 + 1321))))) then v286=0;while true do if (((118 + 67 + 647)<(6062 -(1270 + (2011 -(1688 + 4))))) and (v286==(1352 -(725 + 627)))) then v179=v179 + 1 ;v89[v284]=v177[v179];break;end end break;end end end break;end if ((v175==(0 + 0)) or ((5753 -(1781 + 64))<(2072 -826))) then local v275=0 -0 ;while true do if ((v275==(1 + 0)) or ((845 + 3529)<=1800)) then v175=(1 + 0) -0 ;break;end if (((0 + 0)==v275) or ((1441 -(414 + 657))>(4164 -(283 + (323 -(63 + 107)))))) then v176=v91[2 + 0 ];v177,v178=v86(v89[v176](v89[v176 + 1 + 0 ]));v275=766 -(612 + 153) ;end end end end break;end if (((2596 -1567)<(2046 + 1629)) and (v174==0)) then v175=0 + 0 ;v176=nil;v174=1 -0 ;end end elseif (((9720 -4919)>=2754) and (v92==((61 + 0) -21))) then local v227=(0 -0) -(0 + 0) ;local v228;local v229;while true do if (((6370 -(855 + 546))>(4230 -(139 + 290))) and (v227==(1 + 0))) then for v276=v228 + (2 -1) ,v91[1398 -(66 + 1328) ] do v229=v229   .. v89[v276] ;end v89[v91[(1400 -(781 + 612)) -5 ]]=v229;break;end if (((130 -(113 + 17))==v227) or ((7828 -4844)<=(99 + 857))) then v228=v91[11 -8 ];v229=v89[v228];v227=20 -(16 + 3) ;end end else v89[v91[2]]=v89[v91[7 -4 ]] + v89[v91[4]] ;end elseif (((16961 -12710)>(561 + 1634)) and (v92<=42)) then v89[v91[2 -(0 + 0) ]]=v91[1 + 2 ]~=0 ;elseif (((3931 -(855 + (1024 -(559 + 158))))>2515) and (v92==(962 -(56 + 863)))) then if ((v91[4 -(7 -5) ]<=v89[v91[6 -2 ]]) or ((622 + 1139)>((31143 -22982) -5105))) then v70=v70 + (530 -(388 + 141)) ;else v70=v91[3];end else local v231=919 -((1920 -(337 + 1162)) + 498) ;local v232;local v233;local v234;while true do if ((v231==(2 -1)) or (859==(4051 -((2324 -(842 + 1059)) + 341)))) then v234=0 -0 ;for v277=v232,v91[2 + (382 -(24 + 356)) ] do local v278=0 + 0 ;local v279;while true do if (((5004 -(542 + (1413 -(515 + 531))))==(8483 -4388)) and (v278==(0 -0))) then v279=0 + 0 ;while true do if ((v279==0) or ((953 + 550)>=(110 + 1595))) then v234=v234 + 1 ;v89[v277]=v233[v234];break;end end break;end end end break;end if (((0 -0)==v231) or ((1578 + 615)>=(5388 -(703 + 678)))) then local v264=0;while true do if ((v264==(1161 -(238 + 922))) or ((542 + 518)==(4826 -(767 + 508)))) then v231=1 -0 ;break;end if ((v264==(0 -0)) or ((5877 -(292 + 535 + 198 + 37))==(42 + 29))) then v232=v91[1721 -(1487 + 232) ];v233={v89[v232](v13(v89,v232 + 1 + 0 ,v71))};v264=1 + 0 ;end end end end end v70=v70 + 1 ;break;end end break;end end end end v69=3;end if (v69==1) then v72={...};v73=v12("#",...) -1 ;v69=2;end if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==3) then A,B=v27(v11(v74));if  not A[1] then local v98=v60[4][v70] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
